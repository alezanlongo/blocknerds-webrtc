openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - url: https://api.preview.platform.athenahealth.com
    description: Preview
  - url: https://api.platform.athenahealth.com
    description: Production
info:
  description: Welcome to the More Disruption Please (MDP) API developer portal which gives third parties access to our API and sandbox to develop integrated solutions that will enhance the value and functionality offered by athenaNetÂ®.
  title: athena - Avodah API collection
  version: '0.1'
tags:
  - name: Patient
    description: 'Person requesting a medical appointment'
  - name: PatientSubscription
    description: 'Person requesting a medical appointment Events'
  - name: AppointmentSubscription
    description: 'Appointment Events'
  - name: Problems
paths:
  /v1/{practiceid}/patients:
    post:
      tags:
        - Patient
      summary: Create a register of a new Patient
      operationId: postPracticeidPatients
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostPatient200Response'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patient'
  /v1/{practiceid}/patients/{patientid}:
    get:
      summary: Get specific patient record
      description: >-
        Retrieves data of a specific patient Note: This endpoint may rely on
        specific settings to be enabled in athenaNet Production to function
        properly that are not required in other environments. Please see <a
        href="https://docs.athenahealth.com/api/resources/best-practices-and-troubleshooting#Handling_Beta_APIs">Permissioned
        Rollout of APIs</a> for more information if you are experiencing issues.
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: >-
            Include an array of all departments the patient is a part of along
            with all statuses for those departments.
          in: query
          name: showallpatientdepartmentstatus
          required: false
          schema:
            type: boolean
        - description: If set, will show full SSN instead of a masked number.
          in: query
          name: showfullssn
          required: false
          schema:
            type: boolean
        - description: If set, will show local patient id.
          in: query
          name: showlocalpatientid
          required: false
          schema:
            type: boolean
        - description: >-
            If set, validate that the session user has access to the patient
            record. May only be used in conjunction with INTERNALUSE and
            SESSIONUSER, and DEPARTMENTID. DEPARTMENTID is required because user
            access is department-specific. If the user does not have access to
            the patient record, returns a 403 error.
          in: query
          name: checkuseraccess
          required: false
          schema:
            type: boolean
        - description: >-
            If set, will return local patient id tied to the passed in
            DepartmentID.
          in: query
          name: limitlocalpatientid
          required: false
          schema:
            type: boolean
        - description: Include patient insurance information.
          in: query
          name: showinsurance
          required: false
          schema:
            type: boolean
        - description: If set, will include portal enrollment status in response.
          in: query
          name: showportalstatus
          required: false
          schema:
            type: boolean
        - description: Show detailed information on patient balances.
          in: query
          name: showbalancedetails
          required: false
          schema:
            type: boolean
        - description: >-
            Set to true to allow ability to find patients with record
            restrictions and blocked patients. This should only be used when
            there is no reflection to the patient at all that a match was found
            or not found.
          in: query
          name: ignorerestrictions
          required: false
          schema:
            type: boolean
        - description: >-
            If set, will show the previous patient ID this patient was merged
            from.
          in: query
          name: showpreviouspatientids
          required: false
          schema:
            type: boolean
        - description: >-
            Include information on claims where there is no outstanding patient
            balance. (Only to be used when showbalancedetails is selected.)
          in: query
          name: showallclaims
          required: false
          schema:
            type: boolean
        - description: >-
            This is the ID for the department of the patient you are
            retrieving.  If you are calling this on an enterprise practice with
            multiple financial groups (also called "provider groups"), this will
            ensure you are retrieving the correct patient and not a copy that is
            in a different department.
          in: query
          name: departmentid
          required: false
          schema:
            type: integer
        - description: >-
            Use 2015 Ed. CEHRT compliant strings for describing gender identity
            and sexual orientation.
          in: query
          name: show2015edcehrtvalues
          required: false
          schema:
            type: boolean
        - description: Include custom fields for the patient.
          in: query
          name: showcustomfields
          required: false
          schema:
            type: boolean
        - description: User name of the patient in the third party application.
          in: query
          name: THIRDPARTYUSERNAME
          required: false
          schema:
            type: string
        - description: >-
            When 'true' is passed we will collect relevant data and store in our
            database.
          in: query
          name: PATIENTFACINGCALL
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
          description: Success
      operationId: getPracticeidPatientsPatientid
      tags:
        - Patient
  /v1/{practiceid}/departments:
    get:
      summary: Get list of all departments
      description: Retrieves detailed information of the departments associated to a practice
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: By default, departments hidden in the portal do not appear. When this is set to true, that restriction is not applied. Default is false.
          in: query
          name: showalldepartments
          required: false
          schema:
            type: boolean
        - description: If set to true, list providers who see patients in this department. Note that only providers that have booked appointments in the department will be listed. Default is false.
          in: query
          name: providerlist
          required: false
          schema:
            type: boolean
        - description: If set to true, return hospital only departments.
          in: query
          name: hospitalonly
          required: false
          schema:
            type: boolean
        - description: 'If set to true, list providers who are configured to be able to see patients in this department. This list is most accurate when the department-providers configuration is actively maintained. This list is dependent on valid configuration. Warning: the configured list may be very large. Default is false.'
          in: query
          name: fullproviderlist
          required: false
          schema:
            type: boolean
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
          description: Success
      operationId: getPracticeidDepartments
      tags:
        - Departments Reference
  /v1/{practiceid}/patients/{patientid}/insurances:
    post:
      summary: Create patient's insurance package
      description: Creates a new record of patient insurance for a specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Insurance'

          description: Success
      operationId: postPracticeidPatientsPatientidInsurances
      tags:
        - Insurances
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestInsurance'
        required: true
  /v1/{practiceid}/insurancepackages:
    get:
      summary: Get list of standard insurance packages
      description: Retrieve list of insurance packages for a given search criteria
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            The zipcode of the insurer. Nine digit zipcodes are accepted in the
            format of 12345-6789.
          in: query
          name: insurancezip
          required: false
          schema:
            type: string
        - description: The address of the insurer.
          in: query
          name: insuranceaddress
          required: false
          schema:
            type: string
        - description: The name of the insurer.
          in: query
          name: insuranceplanname
          required: true
          schema:
            type: string
        - description: The patient's insurance member ID.
          in: query
          name: memberid
          required: true
          schema:
            type: string
        - description: The two letter state abbreviation of the insurer's location.
          in: query
          name: insurancestate
          required: false
          schema:
            type: string
        - description: The city of the insurer.
          in: query
          name: insurancecity
          required: false
          schema:
            type: string
        - description: The insurance product type ID.
          in: query
          name: producttypeid
          required: false
          schema:
            enum:
              - 21
              - 22
              - 6
              - 10
              - 2
              - 5
              - 23
              - 24
              - 3
              - 12
              - 7
              - 4
              - 8
              - 1
              - 11
              - 25
              - 9
              - 26
              - 27
            type: integer
            x-enumDescriptions:
              - Behavioral health
              - Contracts
              - EPO
              - FFS
              - HMO
              - Indemnity
              - Legal
              - MVA
              - Medicare Supplement
              - Other
              - PFFS
              - POS
              - POS II
              - PPO
              - QPOS
              - Radiology
              - TRICARE Supplement
              - Vision
              - Workers Comp
        - description: The phone number of the insurer.
          in: query
          name: insurancephone
          required: false
          schema:
            type: string
        - description: >-
            Two letter state abbreviation that filters for insurances that cover
            this state.
          in: query
          name: stateofcoverage
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/insurancePackages'
          description: Success
      operationId: getPracticeidInsurancepackages
      x-list-key: 'insurances'
      tags:
        - Insurance Package
  /v1/{practiceid}/providers:
    get:
      summary: Get list of all providers
      description: Retrieve a list of all providers available in a specific practice
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            There are situations where determining where a provider "normally"
            practices is desired. Unfortuantely, there is no such concept in
            athenaNet since providers often practice in multiple locations.
            However, we can use some intelligence to determine this by looking
            back over the previous few months (90 days) to see actual practice.
            To enable this, set this value between 0 and 1; it is highly
            recommended to be at least .5. This is the ratio of appointments in
            a given department to the total number of appointments for that
            provider. A value of .5 means "the provider's appointments are 50%
            in the department guessed." Setting this to 1 would only return a
            department if ALL of the provider's appointments were in one
            department.
          in: query
          name: showusualdepartmentguessthreshold
          required: false
          schema:
            type: number
        - description: ''
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: >-
            In athenaNet's internal data structures, a single provider can be
            represented by multiple IDs. These IDs are used in certain external
            messages (e.g. HL7) and thus these IDs may need to be known by the
            API user as well.   When set to true, a list of all of these
            ancillary IDs will be provided.
          in: query
          name: showallproviderids
          required: false
          schema:
            type: boolean
        - description: >-
            The provider type to filter the results on. Valid provider type
            values can be found by using GET /reference/providertypes.
          in: query
          name: providertype
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
          description: Success
      operationId: getPracticeidProviders
      tags:
        - Provider Reference
  /v1/{practiceid}/appointments/open:
    post:
      summary: Create a new appointment slot
      description: Provides the ability to add new open appointment slots
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
          description: Success
      operationId: postPracticeidAppointmentsOpen
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestCreateAppointment'
        required: true
      tags:
        - Appointment Slot
  /v1/{practiceid}/appointments/{appointmentid}/checkin:
    post:
      summary: Check in this appointment.
      description: ' Check in this appointment. '
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkin'
          description: Success
      operationId: postPracticeidAppointmentsAppointmentidCheckin
      tags:
        - Appointment Checkin
  /v1/{practiceid}/appointments/{appointmentid}/startcheckin:
    post:
      summary: Initiate appointment check-in process
      description: Notifies that the appointment check-in process has started
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkin'
          description: Success
      operationId: postPracticeidAppointmentsAppointmentidStartcheckin
      tags:
        - Appointment Checkin
  /v1/{practiceid}/appointments/{appointmentid}/cancelcheckin:
    post:
      summary: Cancel appointment check-in process
      description: Cancel appointment check-in process. It cannot be called if the check-in process has been completed.
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkin'
          description: Success
      operationId: postPracticeidAppointmentsAppointmentidCancelcheckin
      tags:
        - Appointment Checkin
  /v1/{practiceid}/chart/{patientid}/encounters:
    get:
      summary: Get list of patient's encounters
      description: Retrieves a list of patient encounters
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Omit any encounters earlier than this date
          in: query
          name: startdate
          required: false
          schema:
            type: string
        - description: >-
            By default only encounters in OPEN, CLOSED, or REVIEW status are
            retrieved, with this flag, encounters aren't filtered by status.
          in: query
          name: showallstatuses
          required: false
          schema:
            type: boolean
        - description: >-
            Retrieve all encounter types, by default only VISIT and ORDERSONLY
            are retrieved.
          in: query
          name: showalltypes
          required: false
          schema:
            type: boolean
        - description: Find the encounter for this appointment.
          in: query
          name: appointmentid
          required: false
          schema:
            type: integer
        - description: Omit any encounters later than this date
          in: query
          name: enddate
          required: false
          schema:
            type: string
        - description: Query diagnosis information for every encounter
          in: query
          name: showdiagnoses
          required: false
          schema:
            type: boolean
        - description: The ID of the provider for this encounter
          in: query
          name: providerid
          required: false
          schema:
            type: integer
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: >-
            Number of entries to return (default 1000, max 10000)Please note
            that this endpoint has a different default and max than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Encounter'
          description: Success
      operationId: getPracticeidChartPatientidEncounters
      tags:
        - Encounter
  /v1/{practiceid}/chart/encounter/{encounterid}:
    get:
      summary: Update patient location/status encounter information
      description: >-
        Modifies the patient location and patient status for a specific
        encounter
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: encounterid
          in: path
          name: encounterid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Encounter'
          description: Success
      operationId: getPracticeidChartEncounterEncounterid
      tags:
        - Encounter
    put:
      summary: Update patient location/status encounter information
      description: >-
        Modifies the patient location and patient status for a specific
        encounter
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: encounterid
          in: path
          name: encounterid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEncounter200Response'
          description: Success
      operationId: putPracticeidChartEncounterEncounterid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                patientlocationid:
                  description: >-
                    The practice patient location id. You can get a list of
                    valid values by department via GET
                    /chart/configuration/patientlocations.
                  type: integer
                patientstatusid:
                  description: >-
                    The practice patient status id. You can get a list of valid
                    values by department via GET
                    /chart/configuration/patientstatuses.
                  type: integer
              type: object
        required: true
      tags:
        - Encounter
  /v1/{practiceid}/chart/configuration/patientlocations:
    get:
      summary: Get list of patient locations
      description: Retrieve a list of patient locations for a specific department
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientLocation'
          description: Success
      operationId: getPracticeidChartConfigurationPatientlocations
      tags:
        - Chart
  /v1/{practiceid}/chart/configuration/patientstatuses:
    get:
      summary: Get list of patient statuses
      description: Retrieves a list of patient statuses during their visit to the provider
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            Number of entries to return (default 1000, max 10000)Please note
            that this endpoint has a different default and max than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientStatus'
          description: Success
      operationId: getPracticeidChartConfigurationPatientstatuses
      tags:
        - Chart
  /v1/{practiceid}/appointments/{appointmentid}:
    put:
      summary: Book appointment
      description: Create a single appointment for specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppointment200Response'
          description: Success
      operationId: putPracticeidAppointmentsAppointmentid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      tags:
        - Appointment
    get:
      summary: Get appointment details
      description: >-
        Retrieves the details of a specific appointment. Note: This endpoint may
        rely on specific settings to be enabled in athenaNet Production to
        function properly that are not required in other environments. Please
        see <a
        href="https://docs.athenahealth.com/api/resources/best-practices-and-troubleshooting#Handling_Beta_APIs">Permissioned
        Rollout of APIs</a> for more information if you are experiencing issues.
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: >-
            By default, the expected co-pay is returned. For performance
            purposes, you can set this to false and copay will not be populated.
          in: query
          name: showcopay
          required: false
          schema:
            type: boolean
        - description: >-
            Include claim information, if available, associated with the
            appointment.
          in: query
          name: showclaimdetail
          required: false
          schema:
            type: boolean
        - description: Include patient insurance information.
          in: query
          name: showinsurance
          required: false
          schema:
            type: boolean
        - description: Show expected procedure codes
          in: query
          name: showexpectedprocedurecodes
          required: false
          schema:
            type: boolean
        - description: >-
            Include patient information for each patient associated with an
            appointment.
          in: query
          name: showpatientdetail
          required: false
          schema:
            type: boolean
        - description: Show indicator for if this is a native athenatelehealth appointment
          in: query
          name: showtelehealth
          required: false
          schema:
            type: boolean
        - description: >-
            When showing patient detail for appointments, the patient
            information for patients with record restrictions and blocked
            patients will not be shown.  Setting this flag to true will show
            that information for those patients.
          in: query
          name: ignorerestrictions
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PutAppointment200Response'
          description: Success
      operationId: getPracticeidAppointmentsAppointmentid
      tags:
        - Appointment
  /v1/{practiceid}/patients/{patientid}/documents/patientcase:
    get:
      summary: Get list of patient case documents for a patient
      description: >-
        Retrieves a list of patientcase document information for a specific
        patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: By default, deleted documents are not listed.  Set to list these.
          in: query
          name: showdeleted
          required: false
          schema:
            type: boolean
        - description: The status of the task to filter document results.
          in: query
          name: status
          required: false
          schema:
            enum:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
            type: string
            x-enumDescriptions:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: Show only documents attached to this encounter.
          in: query
          name: encounterid
          required: false
          schema:
            type: integer
        - description: The document subclass to filter document results.
          in: query
          name: documentsubclass
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientCase'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsPatientcase
      x-list-key: 'patientcases'
      tags:
        - Document Type - Patient Case
    post:
      summary: Add patient case document for a patient
      description: Creates a patient case document record of a specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPatientCase200Response'
          description: Success
      operationId: postPracticeidPatientsPatientidDocumentsPatientcase
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestCreatePatientCase'
        required: true
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/patients/{patientid}/documents/patientcase/{patientcaseid}:
    get:
      summary: Get patient case document for a patient
      description: Retrieves information on a specific patient case document
      parameters:
        - description: patientcaseid
          in: path
          name: patientcaseid
          required: true
          schema:
            type: integer
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientCase'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsPatientcasePatientcaseid
      tags:
        - Document Type - Patient Case
    put:
      summary: Update patient case document for a patient
      description: Modifies information on a specific patientcase document
      parameters:
        - description: patientcaseid
          in: path
          name: patientcaseid
          required: true
          schema:
            type: integer
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPatientCase200Response'
          description: Success
      operationId: putPracticeidPatientsPatientidDocumentsPatientcasePatientcaseid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestCreatePatientCase'
        required: true
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/patients/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for patient's records
      description: Subscribes for changed patients events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidPatientsChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                departmentids:
                  description: >-
                    For every New/Update Subscriptions complete list of
                    departmentids should be passed. NOTE: Without DepartmentIDs
                    entire Context/Practice will be subscribed.
                  items:
                    type: integer
                  type: array
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - PatientSubscription
    get:
      summary: Get list of subscribed events for changes in patient's records
      description: Retrieves list of events applicable for patients changed
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidPatientsChangedSubscription
      tags:
        - PatientSubscription
    delete:
      summary: Unsubscribe to all/specific events for changes in patient's records
      description: Deletes a specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidPatientsChangedSubscription
      tags:
        - PatientSubscription
  /v1/{practiceid}/patients/changed:
    get:
      summary: Get list of changes in patient records
      description: Retrieve list of changes made to the patient record
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed.
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: >-
            Patient ID. Multiple Patient IDs are allowed, either comma separated
            or with multiple values.
          in: query
          name: patientid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: Fetch the Global ID of the patients.
          in: query
          name: returnglobalid
          required: false
          schema:
            type: boolean
        - description: >-
            Patient information for patients with record restrictions and
            blocked patients will not be shown.  Setting this flag to true will
            show that information for those patients.
          in: query
          name: ignorerestrictions
          required: false
          schema:
            type: boolean
        - description: >-
            If set, will show the previous patient ID this patient was merged
            from.
          in: query
          name: showpreviouspatientids
          required: false
          schema:
            type: boolean
        - description: >-
            Department ID. Multiple departments are allowed, either comma
            separated or with multiple values.
          in: query
          name: departmentid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: See showprocessestartdatetime.
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that processed
            messages will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: >-
            Number of entries to return (default 1000, max 10000)Please note
            that this endpoint has a different default and max than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientChanged'
          description: Success
      operationId: getPracticeidPatientsChanged
      tags:
        - PatientSubscription
  /v1/{practiceid}/appointments/changed:
    get:
      summary: Get list of changes in appointment slots based on subscribed events
      description: 'Retrieves the list of changes in appointments or appointment slots Note: This endpoint may rely on specific settings to be enabled in athenaNet Production to function properly that are not required in other environments. Please see <a href="https://docs.athenahealth.com/api/resources/best-practices-and-troubleshooting#Handling_Beta_APIs">Permissioned Rollout of APIs</a> for more information if you are experiencing issues.'
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed.
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: Patient ID. Multiple Patient IDs are allowed, either comma separated or with multiple values.
          in: query
          name: patientid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: Return copay information with the appointment data.
          in: query
          name: showcopay
          required: false
          schema:
            type: boolean
        - description: Include patient insurance information. Shows insurance packages for the appointment if any are selected, and all patient packages otherwise.
          in: query
          name: showinsurance
          required: false
          schema:
            type: boolean
        - description: Include patient information for each patient associated with an appointment.
          in: query
          name: showpatientdetail
          required: false
          schema:
            type: boolean
        - description: When showing patient detail for appointments, the patient information for patients with record restrictions and blocked patients will not be shown.  Setting this flag to true will show that information for those patients.
          in: query
          name: ignorerestrictions
          required: false
          schema:
            type: boolean
        - description: Department ID. Multiple departments are allowed, either comma separated or with multiple values.
          in: query
          name: departmentid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: Provider ID.  Multiple providers are allowed using comma separated values.
          in: query
          name: providerid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: See showprocessedstartdatetime.
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: Include claim information, if available, associated with an appointment.
          in: query
          name: showclaimdetail
          required: false
          schema:
            type: boolean
        - description: Include all remindercall related results, if available, associated with an appointment.
          in: query
          name: showremindercalldetail
          required: false
          schema:
            type: boolean
        - description: Show already processed changes.  This will show changes that you previously retrieved at some point after this datetime mm/dd/yyyy hh24:mi:ss (Eastern). Can be used to refetch data if there was an error, such as a timeout, and records are marked as already retrieved. This is intended to be used with showprocessedenddatetime and for a short period of time only. Also note that all messages will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1000, max 10000)Please note that this endpoint has a different default and max than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentChanged'
          description: Success
      operationId: getPracticeidAppointmentsChanged
      tags:
        - AppointmentSubscription
  /v1/{practiceid}/appointments/changed/subscription:
    get:
      summary: Get list of appointment slot change subscription(s)
      description: Retrieves  the list of events appointment slots which are modified
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: If this is set, we will include the UpdateSuggestedOverbooking event as if it is one of the default events. Otherwise we will ignore that it exists.
          in: query
          name: includesuggestedoverbooking
          required: false
          schema:
            type: boolean
        - description: If this is set, we will include the UpdateRemiderCall event as if it is one of the default events. Otherwise we will ignore that it exists.
          in: query
          name: includeremindercall
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidAppointmentsChangedSubscription
      tags:
        - AppointmentSubscription
    post:
      summary: Subscribe to all/specific change events for appointment slots
      description: Subscribes for changed appointment slots events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidAppointmentsChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                departmentids:
                  description: 'For every New/Update Subscriptions complete list of departmentids should be passed. NOTE: Without DepartmentIDs entire Context/Practice will be subscribed.'
                  items:
                    type: integer
                  type: array
                eventname:
                  description: By default, you are subscribed to all possible events.  If you only wish to subscribe to an individual event, pass the event name with this argument.
                  type: string
                includeremindercall:
                  description: If this is set, we will include the UpdateRemiderCall event as if it is one of the default events. Otherwise we will ignore that it exists.
                  type: boolean
                includesuggestedoverbooking:
                  description: If this is set, we will include the UpdateSuggestedOverbooking event as if it is one of the default events. Otherwise we will ignore that it exists.
                  type: boolean
              type: object
        required: true
      tags:
        - AppointmentSubscription
    delete:
      summary: Unsubscribe to all/specific change events for appointment slots
      description: Delete a specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: By default, you are unsubscribed from all possible events.  If you only wish to unsubscribe from an individual event, pass the event name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
        - description: If this is set, we will include the UpdateSuggestedOverbooking event as if it is one of the default events. Otherwise we will ignore that it exists.
          in: query
          name: includesuggestedoverbooking
          required: false
          schema:
            type: boolean
        - description: If this is set, we will include the UpdateRemiderCall event as if it is one of the default events. Otherwise we will ignore that it exists.
          in: query
          name: includeremindercall
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidAppointmentsChangedSubscription
      tags:
        - AppointmentSubscription
  /v1/{practiceid}/documents/patientcase/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for patient cases
      description: Subscribes for changed patient case document events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidDocumentsPatientcaseChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - Document Type - Patient Case
    get:
      summary: Get list of subscribed events for changes in patient cases
      description: Retrieves list of events applicable for patient case changed document
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidDocumentsPatientcaseChangedSubscription
      tags:
        - Document Type - Patient Case
    delete:
      summary: Unsubscribe to all/specific events for changes in patient cases
      description: Delete an specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidDocumentsPatientcaseChangedSubscription
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/documents/patientcase/changed:
    get:
      summary: Get list of changes in patient cases
      description: Retrieves a list of modified patient cases
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: One or more ID's of the Patient
          in: query
          name: patientids
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that all messages
            will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: >-
            Number of entries to return (default 1000, max 5000)Please note that
            this endpoint has a different default than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientCaseChanged'
          description: Success
      operationId: getPracticeidDocumentsPatientcaseChanged
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/documents/patientcase/{patientcaseid}/actions:
    get:
      summary: Get action note for given patient case
      description: Retrieves action note information of a specific patient case document
      parameters:
        - description: patientcaseid
          in: path
          name: patientcaseid
          required: true
          schema:
            type: integer
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActionNote'
          description: Success
      operationId: getPracticeidDocumentsPatientcasePatientcaseidActions
      x-list-key: 'actionnotes'
      tags:
        - Document Type - Patient Case
    post:
      summary: >-
        This is used to update an action note on a specific document of a type
        indicated by the URI.
      description: Returns a success message pertaining to the update.
      parameters:
        - description: patientcaseid
          in: path
          name: patientcaseid
          required: true
          schema:
            type: integer
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostActionNote200Response'
          description: Success
      operationId: postPracticeidDocumentsPatientcasePatientcaseidActions
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestActionNote'
        required: true
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/patients/{patientid}/documents/patientcase/{patientcaseid}/assign:
    put:
      summary: Reassign patient case document
      description: Reassigns a specific patient case document
      parameters:
        - description: patientcaseid
          in: path
          name: patientcaseid
          required: true
          schema:
            type: integer
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReassignPatient200Response'
          description: Success
      operationId: putPracticeidPatientsPatientidDocumentsPatientcasePatientcaseidAssign
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestReassignPatientCase'
        required: true
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/patients/{patientid}/documents/patientcase/{patientcaseid}/close:
    put:
      summary: Close patient case document
      description: Closes a specific patient case document
      parameters:
        - description: patientcaseid
          in: path
          name: patientcaseid
          required: true
          schema:
            type: integer
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutClosePatient200Response'
          description: Success
      operationId: putPracticeidPatientsPatientidDocumentsPatientcasePatientcaseidClose
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestClosePatientCase'
        required: true
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/reference/documents/patientcase/closereasons:
    get:
      summary: Get list of close-reasons for patient cases
      description: Retrieves a list of reasons to be used to close patient cases
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: denotes the id of the patient case.
          in: query
          name: patientcaseid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CloseReason'
          description: Success
      operationId: getPracticeidReferenceDocumentsPatientcaseClosereasons
      tags:
        - Document Type - Patient Case
  /v1/{practiceid}/patients/{patientid}/chartalert:
    post:
      summary: Create new department specific patient's chart-alert
      description: Create a chart alert record for a patient in a specific department
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostChartAlert200Response'
          description: Success
      operationId: postPracticeidPatientsPatientidChartalert
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestChartAlert'
        required: true
      tags:
        - Chart Alert
    get:
      summary: >-
        Get last modified information of patient's chart specific to a
        department
      description: Retrieves the chart alert record for a patient in a specific department
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: >-
            The department ID; needed because charts, and thus chart notes, may
            be department-specific
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChartAlert'
          description: Success
      operationId: getPracticeidPatientsPatientidChartalert
      tags:
        - Chart Alert
  /v1/{practiceid}/chart/healthhistory/medication/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for medication list
      description: Subscribe for changed historical medications events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidChartHealthhistoryMedicationChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - Historical Medication
    get:
      summary: Get list of medication list change subscription(s)
      description: Retrieves list of events for Historical Medications
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidChartHealthhistoryMedicationChangedSubscription
      tags:
        - Historical Medication
    delete:
      summary: Unsubscribe to all/specific change events for medication list
      description: Delete an specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidChartHealthhistoryMedicationChangedSubscription
      tags:
        - Historical Medication
  /v1/{practiceid}/chart/healthhistory/medication/changed:
    get:
      summary: Get list of changes in medication list based on subscribed events
      description: Retrieves list of  modified historical medications
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: >-
            Patient ID. Multiple Patient IDs are allowed, either comma separated
            or with multiple values.
          in: query
          name: patientid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that all messages
            will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: >-
            Number of entries to return (default 1000, max 5000)Please note that
            this endpoint has a different default than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationChanged'
          description: Success
      operationId: getPracticeidChartHealthhistoryMedicationChanged
      tags:
        - Historical Medication
  /v1/{practiceid}/chart/healthhistory/problems/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for problems
      description: Subscribe for changed problem events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidChartHealthhistoryProblemsChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - Problems
    get:
      summary: Get list of problems change subscription(s)
      description: Retrieves list of events for Problems
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidChartHealthhistoryProblemsChangedSubscription
      tags:
        - Problems
    delete:
      summary: Unsubscribe to all/specific change events for problems
      description: Delete an specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidChartHealthhistoryProblemsChangedSubscription
      tags:
        - Problems
  /v1/{practiceid}/chart/healthhistory/problems/changed:
    get:
      summary: Get list of changes in problems based on subscribed events
      description: Retrieves list of modified problems for a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: >-
            Patient ID. Multiple Patient IDs are allowed, either comma separated
            or with multiple values.
          in: query
          name: patientid
          required: false
          schema:
            items:
              type: integer
            type: array
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that all messages
            will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemChanged'
          description: Success
      operationId: getPracticeidChartHealthhistoryProblemsChanged
      tags:
        - Problems
  /v1/{practiceid}/patients/{patientid}/documents/clinicaldocument:
    post:
      summary: Add clinical document to patient's chart
      description: Creates a clinical document record of a specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalDocument200Response'
          description: Success
      operationId: postPracticeidPatientsPatientidDocumentsClinicaldocument
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostClinicalDocument'
        required: true
      tags:
        - Document Type - Clinical Document
    get:
      summary: Get list of patient's clinical documents
      description: Retrieves a list of clinical document information of a specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: By default, deleted documents are not listed.  Set to list these.
          in: query
          name: showdeleted
          required: false
          schema:
            type: boolean
        - description: The status of the task to filter document results.
          in: query
          name: status
          required: false
          schema:
            enum:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
            type: string
            x-enumDescriptions:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: Show only documents attached to this encounter.
          in: query
          name: encounterid
          required: false
          schema:
            type: integer
        - description: The document subclass to filter document results.
          in: query
          name: documentsubclass
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicalDocument'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsClinicaldocument
      tags:
        - Document Type - Clinical Document
  /v1/{practiceid}/patients/{patientid}/documents/clinicaldocument/{clinicaldocumentid}:
    get:
      summary: Get patient's clinical document
      description: Retrieves a specific clinical document information
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: clinicaldocumentid
          in: path
          name: clinicaldocumentid
          required: true
          schema:
            type: integer
        - description: Default false. If set to true, will include CCDAXML string.
          in: query
          name: showccdaxml
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClinicalDocument'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsClinicaldocumentClinicaldocumentid
      tags:
        - Document Type - Clinical Document
    put:
      summary: Update patient's clinical document
      description: Modifies a specific clinical document information
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: clinicaldocumentid
          in: path
          name: clinicaldocumentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalDocument200Response'
          description: Success
      operationId: putPracticeidPatientsPatientidDocumentsClinicaldocumentClinicaldocumentid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutClinicalDocument'
        required: true
      tags:
        - Document Type - Clinical Document
    delete:
      summary: Mark patient's clinical document as deleted
      description: Deletes the record of a specified clinical document
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: clinicaldocumentid
          in: path
          name: clinicaldocumentid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalDocument200Response'
          description: Success
      operationId: deletePracticeidPatientsPatientidDocumentsClinicaldocumentClinicaldocumentid
      tags:
        - Document Type - Clinical Document
  /v1/{practiceid}/patients/{patientid}/documents/clinicaldocument/{clinicaldocumentid}/pages/{pageid}:
    get:
      summary: Get page from patient's clinical document
      description: Retrieves a specific page from the specific clinical document of the patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: pageid
          in: path
          name: pageid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: clinicaldocumentid
          in: path
          name: clinicaldocumentid
          required: true
          schema:
            type: integer
        - description: The file size of the document being requested.
          in: query
          name: filesize
          required: false
          schema:
            enum:
              - SMALL
              - LARGE
            type: string
            x-enumDescriptions:
              - Small
              - Large
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalDocumentPage'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsClinicaldocumentClinicaldocumentidPagesPageid
      tags:
        - Document Type - Clinical Document
  /v1/{practiceid}/chart/healthhistory/allergies/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for allergies
      description: Subscribes for changed allergy events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidChartHealthhistoryAllergiesChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - Allergy
    get:
      summary: Get list of allergy change subscription(s)
      description: Retrieves list of events applicable for allergies
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidChartHealthhistoryAllergiesChangedSubscription
      tags:
        - Allergy
    delete:
      summary: Unsubscribe to all/specific change events for allergies
      description: Delete an specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidChartHealthhistoryAllergiesChangedSubscription
      tags:
        - Allergy
  /v1/{practiceid}/chart/healthhistory/allergies/changed:
    get:
      summary: Get list of changes in allergies based on subscribed events
      description: Retrieves list of records of modified patient allergy data
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that all messages
            will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyChanged'
          description: Success
      operationId: getPracticeidChartHealthhistoryAllergiesChanged
      tags:
        - Allergy
  /v1/{practiceid}/chart/encounter/{encounterid}/vitals:
    post:
      summary: Add new vital information for given encounter
      description: Create a record of vital readings for a patient for a specific encounter
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: encounterid
          in: path
          name: encounterid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalsResponse'
          description: Success
      operationId: postPracticeidChartEncounterEncounteridVitals
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                vitals:
                  description: >-
                    This is an array of arrays in JSON.  Each subarray contains
                    a group of related readings, like systolic and diastolic
                    blood pressure. They will be assigned the same readingID
                  items:
                    type: string
                  type: array
              required:
                - vitals
              type: object
        required: true
      tags:
        - Vitals (Encounters)
    get:
      x-api-model: VitalsCustomApi
      summary: Get list of vitals for given encounter
      description: Retrieves a patient's vitals reading for a specific encounter
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: encounterid
          in: path
          name: encounterid
          required: true
          schema:
            type: integer
        - description: Only retrieve vitals that were taking on or before this date
          in: query
          name: enddate
          required: false
          schema:
            type: string
        - description: Only retrieve vitals that were taking on or after this date
          in: query
          name: startdate
          required: false
          schema:
            type: string
        - description: Show configured vitals that have no readings for this patient.
          in: query
          name: showemptyvitals
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vitals'
          description: Success
      operationId: getPracticeidChartEncounterEncounteridVitals
      tags:
        - Vitals (Encounters)
  /v1/{practiceid}/chart/encounter/{encounterid}/vitals/{vitalid}:
    put:
      summary: Update vital information for given encounter
      description: Modifies a patient's vitals reading for a specific encounter
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: encounterid
          in: path
          name: encounterid
          required: true
          schema:
            type: integer
        - description: vitalid
          in: path
          name: vitalid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutVitalsResponse'
          description: Success
      operationId: putPracticeidChartEncounterEncounteridVitalsVitalid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                value:
                  description: >-
                    The reading value. See the configuration for the proper
                    units.
                  type: string
              required:
                - value
              type: object
        required: true
      tags:
        - Vitals (Encounters)
  /v1/{practiceid}/chart/configuration/vitals:
    get:
      summary: Get list of practice-configured vitals fields
      description: >-
        The Vitals Reference feature allows the user to retrieve the list of
        vitals configured for a practice.
      x-list-key: 'vitals'
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Show only the vitals configured for this specialty
          in: query
          name: specialtyid
          required: false
          schema:
            type: string
        - description: >-
            Show all global vitals, even if they are not configured at this
            practice.
          in: query
          name: showunconfigured
          required: false
          schema:
            type: boolean
        - description: >-
            Number of entries to return (default 1000, max 1000)Please note that
            this endpoint has a different default and max than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VitalsConfiguration'
          description: Success
      operationId: getPracticeidChartConfigurationVitals
      tags:
        - Vitals
  /v1/{practiceid}/chart/healthhistory/vaccine/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for vaccines
      description: Subscribe for changed Vaccines events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidChartHealthhistoryVaccineChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - Vaccines
    get:
      summary: Get list of vaccine change subscription(s)
      description: Retrieves list of events for Vaccines
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidChartHealthhistoryVaccineChangedSubscription
      tags:
        - Vaccines
    delete:
      summary: Unsubscribe to all/specific change events for vaccines
      description: Delete an specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidChartHealthhistoryVaccineChangedSubscription
      tags:
        - Vaccines
  /v1/{practiceid}/chart/healthhistory/vaccine/changed:
    get:
      summary: Get list of changes in vaccines based on subscription
      description: Retrieves list of modified vaccines data of a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that all messages
            will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: >-
            Number of entries to return (default 1000, max 5000)Please note that
            this endpoint has a different default than normal.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineChanged'
          description: Success
      operationId: getPracticeidChartHealthhistoryVaccineChanged
      tags:
        - Vaccines
  /v1/{practiceid}/chart/healthhistory/familyhistory/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for family history
      description: Subscribes for changed familyhistory events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: postPracticeidChartHealthhistoryFamilyhistoryChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                eventname:
                  description: >-
                    By default, you are subscribed to all possible events.  If
                    you only wish to subscribe to an individual event, pass the
                    event name with this argument.
                  type: string
              type: object
        required: true
      tags:
        - Family History
    get:
      summary: Get list of family history change subscription(s)
      description: Retrieves list of events applicable for family history
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription'
          description: Success
      operationId: getPracticeidChartHealthhistoryFamilyhistoryChangedSubscription
      tags:
        - Family History
    delete:
      summary: Unsubscribe to all/specific change events for family history
      description: Delete an specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: >-
            By default, you are unsubscribed from all possible events.  If you
            only wish to unsubscribe from an individual event, pass the event
            name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangedSubscription200Response'
          description: Success
      operationId: deletePracticeidChartHealthhistoryFamilyhistoryChangedSubscription
      tags:
        - Family History
  /v1/{practiceid}/chart/healthhistory/familyhistory/changed:
    get:
      summary: Get list of changes in family history based on subscribed events
      description: Retrieves list of records of modified family history data
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: >-
            Show already processed changes.  This will show changes that you
            previously retrieved at some point after this datetime mm/dd/yyyy
            hh24:mi:ss (Eastern). Can be used to refetch data if there was an
            error, such as a timeout, and records are marked as already
            retrieved. This is intended to be used with showprocessedenddatetime
            and for a short period of time only. Also note that all messages
            will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyHistoryChanged'
          description: Success
      operationId: getPracticeidChartHealthhistoryFamilyhistoryChanged
      tags:
        - Family History
  /v1/{practiceid}/chart/{patientid}/medications:
    post:
      summary: Add medication to patient's medication list
      description: Add a new medication to the patient's medication list
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMedication200Response'
          description: Success
      operationId: postPracticeidChartPatientidMedications
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestCreateMedication'
        required: true
      tags:
        - Medication
    get:
      summary: Get patient's medication list
      description: Retrieves list of patient's medication and medication details
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: >-
            Include pending medications associated with approved future orders.
            These medications have not yet been submitted.
          in: query
          name: showpend
          required: false
          schema:
            type: boolean
        - description: >-
            Shows the list of RxNorm Identifiers related to the medication. The
            list may contain both branded and generic identifiers. Note: Not All
            medications would include RX Norm.
          in: query
          name: showrxnorm
          required: false
          schema:
            type: boolean
        - description: The athenanet department ID
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: >-
            Historical or Active or Denied. Will return a list of a patient's
            active or historical or denied medications.
          in: query
          name: medicationtype
          required: false
          schema:
            enum:
              - ACTIVE
              - DENIED
              - HISTORICAL
            type: string
            x-enumDescriptions:
              - Active
              - Denied
              - Historical
        - description: Shows the list of NDC numbers related to the medication.
          in: query
          name: showndc
          required: false
          schema:
            type: boolean
        - description: User name of the patient in the third party application.
          in: query
          name: THIRDPARTYUSERNAME
          required: false
          schema:
            type: string
        - description: >-
            When 'true' is passed we will collect relevant data and store in our
            database.
          in: query
          name: PATIENTFACINGCALL
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMedications'
          description: Success
      operationId: getPracticeidChartPatientidMedications
      tags:
        - Medication
  /v1/{practiceid}/reference/medications:
    get:
      summary: Search for available medications
      description: Retrieves a list of medications for a given search parameters
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: A term to search for. Must be at least 2 characters
          in: query
          name: searchvalue
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicationReference'
          description: Success
      operationId: getPracticeidReferenceMedications
      tags:
        - Medication
  /v1/{practiceid}/chart/{patientid}/medications/{medicationentryid}:
    put:
      summary: Update patient's medication list
      description: >-
        Modifies the properties of a given medication. E.g. reason to stop
        having the medication, etc.
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: medicationentryid
          in: path
          name: medicationentryid
          required: true
          schema:
            type: string
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutMedication200Response'
          description: Success
      operationId: putPracticeidChartPatientidMedicationsMedicationentryid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestUpdateMedication'
        required: true
      tags:
        - Medication
  /v1/{practiceid}/appointments/{appointmentid}/notes:
    post:
      summary: Create appointment note
      description: Creates a note for a specific appointment
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAppointmentNote200Response'
          description: Success
      operationId: postPracticeidAppointmentsAppointmentidNotes
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestAppointmentNote'
        required: true
      tags:
        - Appointment Notes
    get:
      summary: Get all appointment notes
      description: Retrieves note details for a specific appointment
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: >-
            By default, we prevent deleted appointment notes from being returned
            via the API.   This flag allows you to show deleted notes in the set
            of results returned.
          in: query
          name: showdeleted
          required: false
          schema:
            type: boolean
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentNote'
          description: Success
      operationId: getPracticeidAppointmentsAppointmentidNotes
      tags:
        - Appointment Notes
  /v1/{practiceid}/appointments/{appointmentid}/notes/{noteid}:
    put:
      summary: Update appointment note
      description: Modifies the note details for a specific appointment
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: appointmentid
          in: path
          name: appointmentid
          required: true
          schema:
            type: integer
        - description: noteid
          in: path
          name: noteid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppointmentNote200Response'
          description: Success
      operationId: putPracticeidAppointmentsAppointmentidNotesNoteid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestUpdateAppointmentNote'
        required: true
      tags:
        - Appointment Notes
  /v1/{practiceid}/chart/{patientid}/problems:
    post:
      summary: Add problem to patient's problem list
      description: Records a problem in the patient's active problem list
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProblem200Response'
          description: Success
      operationId: postPracticeidChartPatientidProblems
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestCreateProblem'
        required: true
      tags:
        - Problems
    get:
      summary: Get patient's problem list
      description: Retrieves patient's active problems list
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Also show inactive (but not soft deleted) problems.
          in: query
          name: showinactive
          required: false
          schema:
            type: boolean
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: >-
            If true, will include every encounter and associated diagnosis with
            each problem. Also fills the bestmatchicd10code field with the best
            conversion from the problem SNOMED code to ICD10 code if there is no
            user-selected ICD10 code in an encounter diagnosis event. Please
            note that the bestmatchicd10code may not always be accurate.
          in: query
          name: showdiagnosisinfo
          required: false
          schema:
            type: boolean
        - description: User name of the patient in the third party application.
          in: query
          name: THIRDPARTYUSERNAME
          required: false
          schema:
            type: string
        - description: >-
            When 'true' is passed we will collect relevant data and store in our
            database.
          in: query
          name: PATIENTFACINGCALL
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProblem200Response'
          description: Success
      operationId: getPracticeidChartPatientidProblems
      tags:
        - Problems
  /v1/{practiceid}/chart/{patientid}/problems/{problemid}:
    put:
      summary: Update patient's problem details
      description: Modify the information of a specific patient's problem
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: problemid
          in: path
          name: problemid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProblem200Response'
          description: Success
      operationId: putPracticeidChartPatientidProblemsProblemid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                departmentid:
                  description: The athenaNet department id.
                  type: integer
                laterality:
                  description: >-
                    Update the laterality of this problem. Can be null, LEFT,
                    RIGHT, or BILATERAL.
                  enum:
                    - ''
                    - LEFT
                    - RIGHT
                    - BILATERAL
                  type: string
                note:
                  description: The note to be attached to this problem.
                  type: string
                startdate:
                  description: >-
                    The onset date to be updated for this problem in MM/DD/YYYY
                    format.
                  type: string
                status:
                  description: Whether the problem is chronic or acute.
                  enum:
                    - ''
                    - CHRONIC
                    - ACUTE
                  type: string
              required:
                - departmentid
              type: object
        required: true
      tags:
        - Problems
  /v1/{practiceid}/patients/{patientid}/documents/labresult:
    get:
      summary: Get list of patient's lab result documents
      description: Retrieves a list of lab result document information of a specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: By default, deleted documents are not listed.  Set to list these.
          in: query
          name: showdeleted
          required: false
          schema:
            type: boolean
        - description: If true, only documents published to the portal at the time of this call are returned.
          in: query
          name: showportalonly
          required: false
          schema:
            type: boolean
        - description: The status of the task to filter document results.
          in: query
          name: status
          required: false
          schema:
            enum:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
            type: string
            x-enumDescriptions:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: Show only documents attached to this encounter.
          in: query
          name: encounterid
          required: false
          schema:
            type: integer
        - description: If true, interpretation template added to the document is also returned.
          in: query
          name: showtemplate
          required: false
          schema:
            type: boolean
        - description: The document subclass to filter document results.
          in: query
          name: documentsubclass
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabResult'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsLabresult
      tags:
        - Document Type - Lab Result
    post:
      summary: Add lab result document to patient's chart
      description: Creates a lab result document record of a specific patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResult200Response'
          description: Success
      operationId: postPracticeidPatientsPatientidDocumentsLabresult
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostLabResult'
        required: true
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/patients/{patientid}/documents/labresult/{labresultid}:
    get:
      summary: Get patient's lab result document
      description: 'Retrieves a specific lab result document information Note: This endpoint may rely on specific settings to be enabled in athenaNet Production to function properly that are not required in other environments. Please see <a href="https://docs.athenahealth.com/api/resources/best-practices-and-troubleshooting#Handling_Beta_APIs">Permissioned Rollout of APIs</a> for more information if you are experiencing issues.'
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: labresultid
          in: path
          name: labresultid
          required: true
          schema:
            type: integer
        - description: If true, interpretation template added to the document is also returned.
          in: query
          name: showtemplate
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResult'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsLabresultLabresultid
      tags:
        - Document Type - Lab Result
    put:
      summary: Update patient's lab result document
      description: Modifies a specific lab result document information
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: labresultid
          in: path
          name: labresultid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResult200Response'
          description: Success
      operationId: putPracticeidPatientsPatientidDocumentsLabresultLabresultid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutLabResult'
        required: true
      tags:
        - Document Type - Lab Result
    delete:
      summary: Mark patient's lab result document as deleted
      description: Deletes the record of a specified lab result document
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: labresultid
          in: path
          name: labresultid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResult200Response'
          description: Success
      operationId: deletePracticeidPatientsPatientidDocumentsLabresultLabresultid
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/patients/{patientid}/documents/labresult/{labresultid}/pages/{pageid}:
    get:
      summary: Get page from patient's lab result document
      description: Retrieves a specific page from the specific lab result document of the patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: pageid
          in: path
          name: pageid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: labresultid
          in: path
          name: labresultid
          required: true
          schema:
            type: integer
        - description: The file size of the document being requested.
          in: query
          name: filesize
          required: false
          schema:
            enum:
              - SMALL
              - LARGE
            type: string
            x-enumDescriptions:
              - Small
              - Large
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClinicalDocumentPage'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsLabresultLabresultidPagesPageid
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/documents/labresult/{documentid}/dataentrycompleted:
    put:
      summary: This endpoint is used to apply a document action on a specific document.
      description: Returns a success message pertaining to the update.
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: documentid
          in: path
          name: documentid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultSuccessProcess'
          description: Success
      operationId: putPracticeidDocumentsLabresultDocumentidDataentrycompleted
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutLabResultDataEntryComplete'
        required: true
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/documents/labresult/{labresultid}/close:
    put:
      summary: Close a lab result
      description: 'Advances a lab result to a closed status. Note: This endpoint may rely on specific settings to be enabled in athenaNet Production to function properly that are not required in other environments. Please see <a href="https://docs.athenahealth.com/api/resources/best-practices-and-troubleshooting#Handling_Beta_APIs">Permissioned Rollout of APIs</a> for more information if you are experiencing issues.'
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: labresultid
          in: path
          name: labresultid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultSuccessProcess'
          description: Success
      operationId: putPracticeidDocumentsLabresultLabresultidClose
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutLabResultClose'
        required: true
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/labresults/changed/subscription/events:
    get:
      summary: Get list of lab result change events to which you can subscribe
      description: Retrieve list of all events that can be input for this subscription.
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultSuscriptionEvent'
          description: Success
      operationId: getPracticeidLabresultsChangedSubscriptionEvents
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/labresults/changed/subscription:
    post:
      summary: Subscribe to all/specific change events for lab results
      description: Subscribes for changed lab results events
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultSuscriptionSuccess'
          description: Success
      operationId: postPracticeidLabresultsChangedSubscription
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostLabResultSuscrioption'
        required: true
      tags:
        - Document Type - Lab Result
    get:
      summary: Get list of lab result change subscription(s)
      description: Retrieves list of events applicable for lab results changes
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultSuscriptionEvent'
          description: Success
      operationId: getPracticeidLabresultsChangedSubscription
      tags:
        - Document Type - Lab Result
    delete:
      summary: Unsubscribe to all/specific change events for lab events
      description: Deletes a specific event which is no longer required
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: By default, you are unsubscribed from all possible events.  If you only wish to unsubscribe from an individual event, pass the event name with this argument.
          in: query
          name: eventname
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultSuscriptionSuccess'
          description: Success
      operationId: deletePracticeidLabresultsChangedSubscription
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/labresults/changed:
    get:
      summary: Get list of changes in lab results based on subscription
      description: Retrieves list of records of modified lab results of patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: If true, only documents published to the portal at the time of this call are returned.
          in: query
          name: showportalonly
          required: false
          schema:
            type: boolean
        - description: For testing purposes, do not mark records as processed
          in: query
          name: leaveunprocessed
          required: false
          schema:
            type: boolean
        - description: See showprocessedstartdatetime
          in: query
          name: showprocessedenddatetime
          required: false
          schema:
            type: string
        - description: Show already processed changes.  This will show changes that you previously retrieved at some point after this datetime mm/dd/yyyy hh24:mi:ss (Eastern). Can be used to refetch data if there was an error, such as a timeout, and records are marked as already retrieved. This is intended to be used with showprocessedenddatetime and for a short period of time only. Also note that all messages will eventually be deleted.
          in: query
          name: showprocessedstartdatetime
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabResultChanged'
          description: Success
      operationId: getPracticeidLabresultsChanged
      tags:
        - Document Type - Lab Result
  /v1/{practiceid}/patients/{patientid}/documents/admin:
    post:
      summary: Add admin document to patient's chart
      description: Create a record of admin document specific to a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDocument200Response'
          description: Success
      operationId: postPracticeidPatientsPatientidDocumentsAdmin
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostAdminDocument'
        required: true
      tags:
        - Document Type - Admin Document
    get:
      summary: Get list of patient's admin documents
      description: Retrieve a list of patient's admin documents
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: By default, deleted documents are not listed.  Set to list these.
          in: query
          name: showdeleted
          required: false
          schema:
            type: boolean
        - description: The status of the task to filter document results.
          in: query
          name: status
          required: false
          schema:
            enum:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
            type: string
            x-enumDescriptions:
              - ADMINISTER
              - CLOSED
              - DATAENTRY
              - DELETED
              - DISPENSE
              - FOLLOWUP
              - HOLD
              - NOTIFY
              - PEND
              - PENDING
              - PENDINGLABEL
              - PERFORM
              - REVIEW
              - SCHEDULE
              - SCHEDULED
              - SUBMIT
              - SUBMITTED
        - description: The athenaNet department id.
          in: query
          name: departmentid
          required: true
          schema:
            type: integer
        - description: If true, entityid and entitytype will be returned. entityid will be populated in createduser attribute.
          in: query
          name: getentityinfo
          required: false
          schema:
            type: boolean
        - description: When "true" is passed we will return filetype, filesize and originalfilename if applicable
          in: query
          name: showmetadata
          required: false
          schema:
            type: boolean
        - description: Show only documents attached to this encounter.
          in: query
          name: encounterid
          required: false
          schema:
            type: integer
        - description: The document subclass to filter document results.
          in: query
          name: documentsubclass
          required: false
          schema:
            type: string
        - description: Number of entries to return (default 1500, max 5000)
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: Starting point of entries; 0-indexed
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                description: An array of image pages associated with this document.
                items:
                  $ref: '#/components/schemas/AdminDocument'
                type: array
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsAdmin
      tags:
        - Document Type - Admin Document
  /v1/{practiceid}/patients/{patientid}/documents/admin/{adminid}:
    get:
      summary: Get patient's admin document
      description: Retrieves the data from a specific admin document of a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: adminid
          in: path
          name: adminid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: If true, entityid and entitytype will be returned. entityid will be populated in createduser attribute.
          in: query
          name: getentityinfo
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminDocument'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsAdminAdminid
      tags:
        - Document Type - Admin Document
    put:
      summary: Update patient's admin document
      description: Modifies the data of a specific admin document of a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: adminid
          in: path
          name: adminid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: Content type of the payload
          in: header
          name: Content-Type
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDocument200Response'
          description: Success
      operationId: putPracticeidPatientsPatientidDocumentsAdminAdminid
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PutAdminDocument'
        required: true
      tags:
        - Document Type - Admin Document
    delete:
      summary: Mark patient's admin document as deleted
      description: Deletes the specific admin document of a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: adminid
          in: path
          name: adminid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDocument200Response'
          description: Success
      operationId: deletePracticeidPatientsPatientidDocumentsAdminAdminid
      tags:
        - Document Type - Admin Document
  /v1/{practiceid}/patients/{patientid}/documents/admin/{adminid}/pages/{pageid}:
    get:
      summary: Get page from patient's admin document
      description: Retrieves a single page from a specific admin document of a patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: pageid
          in: path
          name: pageid
          required: true
          schema:
            type: integer
        - description: adminid
          in: path
          name: adminid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
        - description: The file size of the document being requested.
          in: query
          name: filesize
          required: false
          schema:
            enum:
              - SMALL
              - LARGE
            type: string
            x-enumDescriptions:
              - Small
              - Large
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDocumentPage'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsAdminAdminidPagesPageid
      tags:
        - Document Type - Admin Document
  /v1/{practiceid}/patients/{patientid}/documents/admin/{adminid}/originaldocument:
    get:
      summary: Get patient's original admin document
      description: Retrieves original admin document of the patient
      parameters:
        - description: practiceid
          in: path
          name: practiceid
          required: true
          schema:
            type: integer
        - description: adminid
          in: path
          name: adminid
          required: true
          schema:
            type: integer
        - description: patientid
          in: path
          name: patientid
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDocumentOriginalDocument'
          description: Success
      operationId: getPracticeidPatientsPatientidDocumentsAdminAdminidOriginaldocument
      tags:
        - Document Type - Admin Document
components:
  schemas:
    Patient:
      x-external-id: patientid
      type: object
      required:
        - firstname
        - lastname
        - dob
        - departmentid
        - email
      properties:
        address1:
          description: Patient's address - 1st line
          type: string
        address2:
          description: Patient's address - 2nd line
          type: string
        agriculturalworker:
          description: Used to identify this patient as an agricultural worker. Only settable if client has Social Determinant fields turned on.
          type: string
        agriculturalworkertype:
          description: For patients that are agricultural workers, identifies the type of worker. Only settable if client has Social Determinant fields turned on.
          type: string
        balances:
          description: List of balances owed by the patient, broken down by provider (financial) group.
          items:
            $ref: '#/components/schemas/BalanceItem'
          type: array
        caresummarydeliverypreference:
          description: The patient's preference for care summary delivery.
          type: string
        city:
          description: Patient's city
          type: string
        claimbalancedetails:
          description: Claim level details on patient balances.  (This is only included when SHOWBALANCEDETAILS is set.)
          type: string
        confidentialitycode:
          description: Gives the confidentiality code for the patient. Only returned when IGNORERESTRICTIONS is set to true and COLCR_RETURN_CONFIDENTIALITY_CODE is ON
          type: string
        consenttocall:
          description: The flag is used to record the consent of a patient to receive automated calls per FCC requirements. The requested legal language is 'Entry of any telephone contact number constitutes written consent to receive any automated, prerecorded, and artificial voice telephone calls initiated by the Practice. To alter or revoke this consent, visit the Patient Portal "Contact Preferences" page.'
          enum:
            - ''
            - false
            - true
          type: string
        consenttotext:
          description: The flag is used to record the consent of a patient to receive text messages per FCC requirements. In order for this to be true, a valid mobile phone number must be set and the practice setting "Hide SMS Opt-in option" must be set to Off.
          enum:
            - ''
            - false
            - true
          type: string
        contacthomephone:
          description: Emergency contact home phone.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        contactmobilephone:
          description: Emergency contact mobile phone.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        contactname:
          description: The name of the (emergency) person to contact about the patient. The contactname, contactrelationship, contacthomephone, and contactmobilephone fields are all related to the emergency contact for the patient. They are NOT related to the contractpreference_* fields.
          type: string
        contactpreference:
          description: The MU-required field for "preferred contact method". This is not used by any automated systems.
          type: string
        contactpreference_announcement_email:
          description: If set, the patient has indicated a preference to get or not get "announcement" communications delivered via email.  Note that this will not be present if the practice or patient has not set it.For completeness, turning email off is supported via the API, but it is discouraged. When email is off, patients may not not get messages from the patient portal.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_announcement_phone:
          description: If set, the patient has indicated a preference to get or not get "announcement" communications delivered via phone.  Note that this will not be present if the practice or patient has not set it.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_announcement_sms:
          description: If set, the patient has indicated a preference to get or not get "announcement" communications delivered via SMS.  Note that this will not be present if the practice or patient has not set it.For SMS, there is specific terms of service language that must be used when displaying this as an option to be turned on.  Turning on must be an action by the patient, not a practice user.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_appointment_email:
          description: If set, the patient has indicated a preference to get or not get "appointment" communications delivered via email.  Note that this will not be present if the practice or patient has not set it.For completeness, turning email off is supported via the API, but it is discouraged. When email is off, patients may not not get messages from the patient portal.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_appointment_phone:
          description: If set, the patient has indicated a preference to get or not get "appointment" communications delivered via phone.  Note that this will not be present if the practice or patient has not set it.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_appointment_sms:
          description: If set, the patient has indicated a preference to get or not get "appointment" communications delivered via SMS.  Note that this will not be present if the practice or patient has not set it.For SMS, there is specific terms of service language that must be used when displaying this as an option to be turned on.  Turning on must be an action by the patient, not a practice user.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_billing_email:
          description: If set, the patient has indicated a preference to get or not get "billing" communications delivered via email.  Note that this will not be present if the practice or patient has not set it.For completeness, turning email off is supported via the API, but it is discouraged. When email is off, patients may not not get messages from the patient portal.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_billing_phone:
          description: If set, the patient has indicated a preference to get or not get "billing" communications delivered via phone.  Note that this will not be present if the practice or patient has not set it.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_billing_sms:
          description: If set, the patient has indicated a preference to get or not get "billing" communications delivered via SMS.  Note that this will not be present if the practice or patient has not set it.For SMS, there is specific terms of service language that must be used when displaying this as an option to be turned on.  Turning on must be an action by the patient, not a practice user.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_lab_email:
          description: If set, the patient has indicated a preference to get or not get "lab" communications delivered via email.  Note that this will not be present if the practice or patient has not set it.For completeness, turning email off is supported via the API, but it is discouraged. When email is off, patients may not not get messages from the patient portal.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_lab_phone:
          description: If set, the patient has indicated a preference to get or not get "lab" communications delivered via phone.  Note that this will not be present if the practice or patient has not set it.
          enum:
            - ''
            - false
            - true
          type: string
        contactpreference_lab_sms:
          description: If set, the patient has indicated a preference to get or not get "lab" communications delivered via SMS.  Note that this will not be present if the practice or patient has not set it.For SMS, there is specific terms of service language that must be used when displaying this as an option to be turned on.  Turning on must be an action by the patient, not a practice user.
          enum:
            - ''
            - false
            - true
          type: string
        contactrelationship:
          description: Emergency contact relationship (one of SPOUSE, PARENT, CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN, OTHER)
          type: string
        countrycode:
          description: Patient's country code
          type: string
        countrycode3166:
          description: Patient's country code (ISO 3166-1)
          type: string
        customfields:
          description: Same as /patients/{patientid}/customfields call, but without the department ID. Depending on setup, and only in large practices, the custom field values may or may not be the same between departments. If this is a concern, using the /patients/{patientid}/customfields call is preferred. Only for a single patient when showcustomfields is set to true.
          items:
            $ref: '#/components/schemas/customfield'
          type: array
        deceaseddate:
          description: If present, the date on which a patient died.
          type: string
        defaultpharmacyncpdpid:
          description: 'The NCPDP ID of the patient''s preferred pharmacy.  See http://www.ncpdp.org/ for details. Note: if updating this field, please make sure to have a CLINICALORDERTYPEGROUPID field as well.'
          type: string
        departmentid:
          description: Primary (registration) department ID.
          type: string
        dob:
          description: Patient's DOB (mm/dd/yyyy)
          type: string
        donotcallyn:
          description: Warning! This patient will not receive any communication from the practice if this field is set to true.
          enum:
            - ''
            - false
            - true
          type: string
        driverslicenseexpirationdate:
          type: string
        driverslicensenumber:
          type: string
        driverslicensestateid:
          type: string
        driverslicenseurl:
          description: The URL to the patient's driver's license
          type: string
        driverslicenseyn:
          description: True if the patient has a driver's license uploaded
          enum:
            - ''
            - false
            - true
          type: string
        email:
          description: Patient's email address.  'declined' can be used to indicate just that.
          type: string
        emailexistsyn:
          description: True if email exists. False if patient declined. Null if status is unknown.
          enum:
            - ''
            - false
            - true
          type: string
        employeraddress:
          description: The patient's employer's address.
          type: string
        employercity:
          description: The patient's employer's city.
          type: string
        employerfax:
          description: The patient's employer's fax.
          type: string
        employerid:
          description: The patient's employer's ID (from /employers call)
          type: string
        employername:
          description: The patient's employer's name.
          type: string
        employerphone:
          description: The patient's employer's phone number. Normally, this is set by setting employerid. However, setting this value can be used to override this on an individual patient.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        employerstate:
          description: The patient's employer's state.
          type: string
        employerzip:
          description: The patient's employer's zip.
          type: string
        ethnicitycode:
          description: 'Ethnicity of the patient, using the 2.16.840.1.113883.5.50 codeset. See http://www.hl7.org/implement/standards/fhir/terminologies-v3.html Special case: use "declined" to indicate that the patient declined to answer.'
          type: string
        firstappointment:
          description: The first appointment for this patient, excluding cancelled or no-show appointments. (mm/dd/yyyy h24:mi)
          type: string
        firstname:
          description: Patient's first name
          type: string
        guarantoraddress1:
          description: Guarantor's address
          type: string
        guarantoraddress2:
          description: Guarantor's address - line 2
          type: string
        guarantoraddresssameaspatient:
          default: 'Y'
          description: The address of the guarantor is the same as the patient.
          enum:
            - ''
            - false
            - true
          type: string
        guarantorcity:
          description: Guarantor's city
          type: string
        guarantorcountrycode:
          description: Guarantor's country code
          type: string
        guarantorcountrycode3166:
          description: Guarantor's country code (ISO 3166-1)
          type: string
        guarantordob:
          description: Guarantor's DOB (mm/dd/yyyy)
          type: string
        guarantoremail:
          description: Guarantor's email address
          type: string
        guarantoremployerid:
          description: The guaranror's employer's ID (from /employers call)
          type: string
        guarantorfirstname:
          description: Guarantor's first name
          type: string
        guarantorlastname:
          description: Guarantor's last name
          type: string
        guarantormiddlename:
          description: Guarantor's middle name
          type: string
        guarantorphone:
          description: Guarantor's phone number.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        guarantorrelationshiptopatient:
          description: The guarantor's relationship to the patient
          type: string
        guarantorssn:
          description: Guarantor's SSN
          type: string
        guarantorstate:
          description: Guarantor's state (2 letter abbreviation)
          type: string
        guarantorsuffix:
          description: Guarantor's name suffix
          type: string
        guarantorzip:
          description: Guarantor's zip
          type: string
        guardianfirstname:
          description: The first name of the patient's guardian.
          type: string
        guardianlastname:
          description: The last name of the patient's guardian.
          type: string
        guardianmiddlename:
          description: The middle name of the patient's guardian.
          type: string
        guardiansuffix:
          description: The suffix of the patient's guardian.
          type: string
        hasmobileyn:
          description: Set to false if a client has declined a phone number.
          type: string
        hierarchicalcode:
          description: The patient race hierarchical code
          type: string
        homeboundyn:
          description: If the patient is homebound, this is true.
          enum:
            - ''
            - false
            - true
          type: string
        homeless:
          description: Used to identify this patient as homeless. Only settable if client has Social Determinant fields turned on.
          type: string
        homelesstype:
          description: For patients that are homeless, provides more detail regarding the patient's homeless situation. Only settable if client has Social Determinant fields turned on.
          type: string
        homephone:
          description: The patient's home phone number.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        industrycode:
          description: Industry of the patient, using the US Census industry code (code system 2.16.840.1.113883.6.310).  "other" can be used as well.
          type: string
        insurances:
          description: List of active patient insurance packages. Only shown for a single patient and if SHOWINSURANCE is set.
          items:
            $ref: '#/components/schemas/InsurancePatient'
          type: array
        language6392code:
          description: 'Language of the patient, using the ISO 639.2 code. (http://www.loc.gov/standards/iso639-2/php/code_list.php; "T" or terminology code) Special case: use "declined" to indicate that the patient declined to answer.'
          type: string
        lastappointment:
          description: The last appointment for this patient (before today), excluding cancelled or no-show appointments. (mm/dd/yyyy h24:mi)
          type: string
        lastemail:
          description: Tthe last email for this patient on file.
          type: string
        lastname:
          description: Patient's last name
          type: string
        maritalstatus:
          description: Marital Status (D=Divorced, M=Married, S=Single, U=Unknown, W=Widowed, X=Separated, P=Partner)
          type: string
        maritalstatusname:
          description: The long version of the marital status.
          type: string
        medicationhistoryconsentverified:
          description: Medication history consent status.  If a practice doesn't have RXHub or Surescripts enabled, this will be null
          enum:
            - ''
            - false
            - true
          type: string
        middlename:
          description: Patient's middle name
          type: string
        mobilecarrierid:
          description: The ID of the mobile carrier, from /mobilecarriers or the list below.
          type: string
        mobilephone:
          description: The patient's mobile phone number. On input, 'declined' can be used to indicate no number. (Alternatively, hasmobile can also be set to false. "declined" simply does this for you.)  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        nextkinname:
          description: The full name of the next of kin.
          type: string
        nextkinphone:
          description: The next of kin phone number.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        nextkinrelationship:
          description: The next of kin relationship (one of SPOUSE, PARENT, CHILD, SIBLING, FRIEND, COUSIN, GUARDIAN, OTHER)
          type: string
        notes:
          description: Notes associated with this patient.
          type: string
        occupationcode:
          description: Occupation of the patient, using the US Census occupation code (code system 2.16.840.1.113883.6.240).  "other" can be used as well.
          type: string
        onlinestatementonlyyn:
          description: Set to true if a patient wishes to get e-statements instead of paper statements. Should only be set for patients with an email address and clients with athenaCommunicator. The language we use in the portal is, "Future billing statements will be sent to you securely via your Patient Portal account. You will receive an email notice when new statements are available." This language is not required, but it is given as a suggestion.
          type: string
        patientid:
          description: Please remember to never disclose this ID to patients since it may result in inadvertant disclosure that a patient exists in a practice already.
          type: string
        patientphotourl:
          description: The URL to the patient photo
          type: string
        patientphotoyn:
          description: True if the patient has a photo uploaded
          enum:
            - ''
            - false
            - true
          type: string
        portalaccessgiven:
          description: This flag is set if the patient has been given access to the portal. This may be set by the API user if a patient has been given access to the portal "by providing a preprinted brochure or flyer showing the URL where patients can access their Patient Care Summaries." The practiceinfo endpoint can provide the portal URL. While technically allowed, it would be very unusual to set this to false via the API.
          type: string
        portalsignatureonfile:
          default: 'N'
          enum:
            - ''
            - false
            - true
          type: string
        portalstatus:
          description: Portal status details.  See /patients/{patientid}/portalstatus for details.
          type: string
        portaltermsonfile:
          default: 'N'
          enum:
            - ''
            - false
            - true
          type: string
        povertylevelcalculated:
          description: Patient's poverty level (% of the Federal Poverty Level), as calculated from family size, income per pay period, pay period, and state. Typically only valued if client has Federal Poverty Level fields turned on.
          type: string
        povertylevelfamilysize:
          description: Patient's family size (used for determining poverty level). Only settable if client has Federal Poverty Level fields turned on.
          type: string
        povertylevelfamilysizedeclined:
          description: Indicates if the patient delcines to provide "povertylevelfamilysize". Should be set to Yes if the patient declines.
          type: string
        povertylevelincomedeclined:
          description: Indicates if the patient delcines to provide "povertylevelincomeperpayperiod". Should be set to Yes if the patient declines.
          type: string
        povertylevelincomepayperiod:
          description: Patient's pay period (used for determining poverty level). Only settable if client has Federal Poverty Level fields turned on.
          type: string
        povertylevelincomeperpayperiod:
          description: Patient's income per specified pay period (used for determining poverty level). Only settable if client has Federal Poverty Level fields turned on.
          type: string
        povertylevelincomerangedeclined:
          description: Indicates whether or not the patient declines to provide an income level.
          type: string
        preferredname:
          description: The patient's preferred name (i.e. nickname).
          type: string
        primarydepartmentid:
          description: The patient's "current" department. This field is not always set by the practice.
          type: string
        primaryproviderid:
          description: The "primary" provider for this patient, if set.
          type: string
        privacyinformationverified:
          default: 'N'
          description: This flag is set if the patient's privacy information has been verified. Privacy information returns True if all of the items referenced in GET /patients/{patientid}/privacyinformationverified are true. Privacy information returns false if any of the items referenced in the GET /patients/{patientid}/privacyinformationverified API are false or expired.
          enum:
            - ''
            - false
            - true
          type: string
        publichousing:
          description: Used to identify this patient as living in public housing. Only settable if client has Social Determinant fields turned on.
          type: string
        race:
          description: 'The patient race, using the 2.16.840.1.113883.5.104 codeset.  See http://www.hl7.org/implement/standards/fhir/terminologies-v3.html Special case: use "declined" to indicate that the patient declined to answer. Multiple values or a tab-seperated list of codes is acceptable for multiple races for input.  The first race will be considered "primary".  Note: you must update all values at once if you update any.'
          type: string
        racename:
          description: The patient's primary race name.  See race for more complete details.
          type: string
        referralsourceid:
          description: The referral / "how did you hear about us" ID.
          type: string
        registrationdate:
          description: Date the patient was registered.
          type: string
        schoolbasedhealthcenter:
          description: Used to identify this patient as school-based health center patient. Only settable if client has Social Determinant fields turned on.
          type: string
        sex:
          description: Patient's sex (M/F)
          type: string
        ssn:
          type: string
        state:
          description: Patient's state (2 letter abbreviation)
          type: string
        status:
          description: The "status" of the patient, one of active, inactive, prospective, or deleted.
          type: string
        suffix:
          description: Patient's name suffix
          type: string
        veteran:
          description: Used to identify this patient as a veteran. Only settable if client has Social Determinant fields turned on.
          type: string
        workphone:
          description: The patient's work phone number.  Generally not used to contact a patient.  Invalid numbers in a GET/PUT will be ignored.  Patient phone numbers and other data may change, and one phone number may be associated with multiple patients. You are responsible for taking additional steps to verify patient identity and for using this data in accordance with applicable law, including HIPAA.  Invalid numbers in a POST will be ignored, possibly resulting in an error.
          type: string
        zip:
          description: Patient's zip.  Matching occurs on first 5 characters.
          type: string
    PostPatient200Response:
      x-external-id: patientid
      type: object
      properties:
        errormessage:
          description: Error message will be returned if show error message flag is set to true and patient match found.
          type: string
        patientid:
          description: Please remember to never disclose this ID to patients since it may result in inadvertant disclosure that a patient exists in a practice already.
          type: string
    contractItem:
      x-external-id: contractid
      type: object
      properties:
        availablebalance:
          description: The available balance on this contract.
          type: string
        contractclass:
          description: The type of contract.  For example, "ONEYEAR,"
          type: string
        maxamount:
          description: The maximum allowed amount for this contract.
          type: string
    BalanceItem:
      x-external-id: balanceid
      type: object
      properties:
        balance:
          description: Balance for this provider group.
          type: string
        cleanbalance:
          description: Indicates whether the balance is associated with a contract, payment plan, or collections agency.
          enum:
            - ''
            - false
            - true
          type: string
        collectionsbalance:
          description: The outstanding amount associated with a collections agency.
          type: string
        contracts:
          description: Information related to existing credit card contracts.
          items:
            $ref: '#/components/schemas/contractItem'
          type: array
        departmentids:
          description: Comma separated list of department IDs that belong to this group
          type: string
        paymentplanbalance:
          description: The outstanding amount associated with a payment plan.
          type: string
        providergroupid:
          description: Athena ID for this financial group.
          type: integer
        patient:
          $ref: '#/components/schemas/Patient'
    customfield:
      properties:
        customfieldid:
          description: Corresponds to the /customfields customfieldid.
          type: string
        customfieldvalue:
          description: For a non-select custom field, the value.
          type: string
        optionid:
          description: For a select custom field, the selectid value (from /customfield's selectlist).
          type: string
        patient:
          $ref: '#/components/schemas/Patient'
      type: object
    InsurancePatient:
      x-external-id: insuranceid
      properties:
        adjusterfax:
          description: CASE POLICY FIELD - Fax for the adjuster on this case policy.  Only available for auto insurance or worker's comp case policies.
          type: string
        adjusterfirstname:
          description: CASE POLICY FIELD - First name of the adjuster on this case policy.  Only available for auto insurance or worker's comp case policies.
          type: string
        adjusterlastname:
          description: CASE POLICY FIELD - Last name of the adjuster on this case policy.  Only available for auto insurance or worker's comp case policies.
          type: string
        adjusterphone:
          description: CASE POLICY FIELD - Phone number/other contact info for the adjuster on this case policy.  Only available for auto insurance or worker's comp case policies.
          type: string
        anotherpartyresponsibleyn:
          description: CASE POLICY FIELD - Boolean field indicating if another party was responsible for this accident.
          enum:
            - ''
            - false
            - true
          type: string
        autoaccidentstate:
          description: CASE POLICY FIELD - Two-letter abbreviation for the state in which the auto accident took place. Only meaningful for auto insurance case policies.
          type: string
        cancelled:
          description: The date in which the insurance was marked cancelled.
          type: string
        caseinjurydate:
          description: CASE POLICY FIELD - Date of the injury.  Required for auto insurance, legal, and worker's comp case policies.
          type: string
        casepolicytypename:
          description: CASE POLICY FIELD - The name of this type of case policy.
          type: string
        ccmstatusid:
          description: Status ID of current CCM enrollment.
          type: integer
        ccmstatusname:
          description: The name of current CCM enrollment status.
          type: string
        coinsurancepercent:
          description: The coinsurance percentage for this insurance. If you've just POSTed a new insurance you will have to wait for the auto eligbility check before this field populates.
          type: number
        copays:
          description: Details about the copays for this insurance package. If you've just POSTed a new insurance you will have to wait for the auto eligbility check before these populate.
          type: string
        descriptionofinjury:
          description: CASE POLICY FIELD - A description of the injury.  Only available for auto insurance and worker's comp case policies.
          type: string
        eligibilitylastchecked:
          description: Date the eligibility was last checked.
          type: string
        eligibilitymessage:
          description: The message, usually from our engine, of the eligibility check.
          type: string
        eligibilityreason:
          description: The source of the current status. Athena is our eligibility engine.
          type: string
        eligibilitystatus:
          description: Current eligibility status of this insurance package.
          type: string
        employerid:
          description: The employer ID associated with the patient's insurance.
          type: string
        expirationdate:
          description: Date the insurance expires.
          type: string
        icd10codes:
          description: CASE POLICY FIELD - See documentation for ICD9CODES.
          type: string
        icd9codes:
          description: CASE POLICY FIELD - A list of ICD9 accepted diagnosis codes. Only available for worker's comp case policies.
          type: string
        injuredbodypart:
          description: CASE POLICY FIELD - Text field for describing the injured body part.  Only available for auto insurance  and worker's comp case policies.
          type: string
        insuranceclaimnumber:
          description: CASE POLICY FIELD - The auto insurance claim number or the worker's comp claim number.
          type: string
        insuranceid:
          description: The athena insurance policy ID.
          type: string
        insuranceidnumber:
          description: The insurance policy ID number (as presented on the insurance card itself).
          type: string
        insurancepackageaddress1:
          description: Address 1 for the AthenaNet insurance Package.
          type: string
        insurancepackageaddress2:
          description: Address 2 for the AthenaNet insurance Package.
          type: string
        insurancepackagecity:
          description: City for the AthenaNet insurance Package.
          type: string
        insurancepackageid:
          description: The athenaNet insurance package ID.
          type: integer
        insurancepackagestate:
          description: State of the AthenaNet insurance package
          type: string
        insurancepackagezip:
          description: Zip code of the AthenaNet insurance package
          type: string
        insurancephone:
          description: 'The phone number for the insurance company. Note: This defaults to the insurance package phone number. If this is set, it will override it. Likewise if blanked out, it will go back to default.'
          type: string
        insuranceplandisplayname:
          description: Superpackagename of the specific insurance package.
          type: string
        insuranceplanname:
          description: Name of the specific insurance package.
          type: string
        insurancepolicyholder:
          description: The full name of the insurance policy holder.
          type: string
        insurancepolicyholderaddress1:
          description: The first address line of the insurance policy holder.
          type: string
        insurancepolicyholderaddress2:
          description: The second address line of the insurance policy holder.
          type: string
        insurancepolicyholdercity:
          description: The city of the insurance policy holder.
          type: string
        insurancepolicyholdercountrycode:
          description: The country code (3 letter) of the insurance policy holder.
          type: string
        insurancepolicyholdercountryiso3166:
          description: The <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166</a> country code of the insurance policy holder.
          type: string
        insurancepolicyholderdob:
          description: The DOB of the insurance policy holder (mm/dd/yyyy).
          type: string
        insurancepolicyholderfirstname:
          description: The first name of the insurance policy holder.  Except for self-pay, required for new policies.
          type: string
        insurancepolicyholderlastname:
          description: The last name of the insurance policy holder.  Except for self-pay, required for new policies.
          type: string
        insurancepolicyholdermiddlename:
          description: The middle name of the insurance policy holder.
          type: string
        insurancepolicyholdersex:
          description: The sex of the insurance policy holder.  Except for self-pay, required for new policies.
          type: string
        insurancepolicyholderssn:
          description: The SSN of the insurance policy holder.
          type: string
        insurancepolicyholderstate:
          description: The state of the insurance policy holder.
          type: string
        insurancepolicyholdersuffix:
          description: The suffix of the insurance policy holder.
          type: string
        insurancepolicyholderzip:
          description: The zip of the insurance policy holder.
          type: string
        insurancetype:
          description: Type of insurance. E.g., Medicare Part B, Group Policy, HMO, etc.
          type: string
        insuredentitytypeid:
          description: The ID of the entity type for this insurance.
          type: integer
        insuredpcp:
          type: string
        insuredpcpnpi:
          description: The national provider id of the primary care physcian assicated with the insurance.
          type: integer
        ircid:
          description: Insurance category / company internal ID
          type: integer
        ircname:
          description: Insurance category / company. E.g., United Healthcare, BCBS-MA, etc.
          type: string
        issuedate:
          description: Date the insurance was issued.
          type: string
        policynumber:
          description: The insurance group number.  This is sometimes present on an insurance card.
          type: string
        relatedtoautoaccidentyn:
          description: CASE POLICY FIELD - Boolean field indicating whether this case policy is related to an auto accident.
          enum:
            - ''
            - false
            - true
          type: string
        relatedtoemploymentyn:
          description: CASE POLICY FIELD - Boolean field indicating whether this case policy is related to the patient's employer.
          enum:
            - ''
            - false
            - true
          type: string
        relatedtootheraccidentyn:
          description: CASE POLICY FIELD - Boolean field indicating whether this case policy is related to another accident.  Only available for worker's comp case policies.
          enum:
            - ''
            - false
            - true
          type: string
        relationshiptoinsured:
          description: This patient's relationship to the policy holder (text).
          type: string
        relationshiptoinsuredid:
          default: 1
          description: This patient's relationship to the policy holder (as an ID).  See <a href="/workflows/patient-relationship-mapping">the mapping</a>.
          type: integer
        repricername:
          description: CASE POLICY FIELD - Name for the repricer.  Only available for worker's comp case policies.
          type: string
        repricerphone:
          description: CASE POLICY FIELD - Phone number for the repricer.  Only available for worker's comp case policies.
          type: string
        sequencenumber:
          description: 1 = primary, 2 = secondary, 3 = tertiary, etc.  Must have a primary before a secondary and a secondary before a tertiary, etc.
          type: integer
        slidingfeeplanid:
          description: If the patient is on a sliding fee plan, this is the ID of that plan.  See /slidingfeeplans.
          type: integer
        stateofreportedinjury:
          description: CASE POLICY FIELD - Two-letter state abbreviation for the state this injury was reported in.  Only available for worker's comp case policies.
          type: string
        patient:
          $ref: '#/components/schemas/Patient'
      type: object
    Department:
      x-external-id: departmentid
      properties:
        address:
          description: The address for this department.
          type: string
        address2:
          description: The address (line 2) for this department.
          type: string
        chartsharinggroupid:
          description: The chart sharing group ID puts departments (that are enabled for Clinicals) into groups with regards to clinical information. Any chart related GET calls with department IDs that are in the same chart sharing group generally return the same set of information. For example, if department IDs 1 and 2 are in chart sharing group 1000 and department IDs 20 and 21 are in chart sharing group 2000, the allergies endpoint for department ID 1 or 2 will return the same set of data, and using department IDs 20 and 21 may return a different set of allergies. Most commonly, this is used to ensure mental health and other sensitive charts remain separate from other data.
          type: string
        city:
          description: The city for this department.
          type: string
        clinicalproviderfax:
          description: This is the department's fax number for receiving orders.
          type: string
        clinicals:
          description: Is Clinicals turned on for this department. Possible values are "ON", "OFF", "DOCUMENTSONLY" (which means that they accept documents, but generally not doing encounters in Clinicals) or "ADMINONLY" which for most purposes is the same as "OFF", though means that it is in the middle of implementation.
          type: string
        communicatorbrandid:
          description: The ID of the patient-facing brand this department belongs to.
          type: string
        creditcardtypes:
          description: An array of credit card types accepted in this department (for retail transactions). If not present, credit cards can not be processed for this department for retail transactions.
          type: string
        departmentid:
          description: The department ID.  This ID is local to each practice.
          type: string
        doesnotobservedst:
          description: Set to true if this practice does not observe daylight savings time.
          enum:
            - ''
            - false
            - true
          type: string
        ecommercecreditcardtypes:
          description: An array of credit card types accepted in this department (for ecommerce transactions). If not present, credit cards can not be processed for this department for ecommerce transactions.
          type: string
        fax:
          description: This is the department's fax number.  Sometimes this is not configured even though the department can receive faxes.  This happens when the main clinical provider has their fax number set up but the department does not.  You should check both this field and the "clinicalproviderfax" field when determining if faxes are possible.
          type: string
        ishospitaldepartment:
          description: Flag denoting if this department is a hospital department.
          enum:
            - ''
            - false
            - true
          type: string
        latitude:
          description: The latitude may be set by the practice to correct any bad public mapping data.  In degrees, with a decimal component.
          type: string
        longitude:
          description: The longitude may be set by the practice to correct any bad public mapping data.  In degrees, with a decimal component.
          type: string
        medicationhistoryconsent:
          description: Should medication history consent be asked in this practice. This is a practice-wide setting at the end of the day; if it is on for one Clinicals department (of status "ON"), it will be on for all Clinicals departments.
          enum:
            - ''
            - false
            - true
          type: string
        name:
          description: The department's name.
          type: string
        oneyearcontractmax:
          description: For a year long payment contract, the practice's suggested maximum amount for this department.
          type: string
        patientdepartmentname:
          description: The patient-friendly name for this department, if set by the practice.
          type: string
        phone:
          description: This number is not always patient-facing; it may be a "back line".
          type: string
        placeofservicefacility:
          description: Is this department a "facility" or not
          enum:
            - ''
            - false
            - true
          type: string
        placeofservicetypeid:
          description: An athena-internal ID for the type of service location (e.g. office vs. hospital)
          type: string
        placeofservicetypename:
          description: The name describing the type of service location (e.g. office vs. hospital)
          type: string
        portalurl:
          description: The URL for the practice or the portal, if available, for this department.  This may be the practice's website where they have a link to the portal.
          type: string
        providergroupid:
          description: The ID of the financial group this department belongs to.  Not all practices have distinct financial groups.
          type: string
        providergroupname:
          description: The name of the financial group this department belongs to.  Not all practices have distinct financial groups.
          type: string
        providerlist:
          description: If providerlist is passed in (set to true), a list of provider IDs
          type: string
        servicedepartment:
          description: Indicates if this is a department where billable services are performed (i.e. a department where you can create claims).
          enum:
            - ''
            - false
            - true
          type: string
        singleappointmentcontractmax:
          description: For a single appointment payment contract, the practice's suggested maximum amount for this department.
          type: string
        state:
          description: The state for this department.
          type: string
        timezone:
          description: The timezone for this department, offset from UTC/GMT.
          type: string
        timezonename:
          description: ' Timezone name of the department. '
          type: string
        timezoneoffset:
          description: The "normal" timezone offset from UTC/GMT.  The "timezone" combines this and "doesnotobservedst".  During daylight savings, this is 1 less than "timezone".
          type: string
        zip:
          description: The zip code for this department.
          type: string
      type: object
    Copays:
      x-external-id: copayid
      type: object
      properties:
        copayamount:
          description: The amount of the copay.
          type: string
        copaytype:
          description: What the copay amount applies to.
          type: number
    Insurance:
      x-external-id: insuranceid
      properties:
        adjusterfax:
          description: >-
            CASE POLICY FIELD - Fax for the adjuster on this case
            policy.  Only available for auto insurance or worker's
            comp case policies.
          type: string
        adjusterfirstname:
          description: >-
            CASE POLICY FIELD - First name of the adjuster on this
            case policy.  Only available for auto insurance or
            worker's comp case policies.
          type: string
        adjusterlastname:
          description: >-
            CASE POLICY FIELD - Last name of the adjuster on this case
            policy.  Only available for auto insurance or worker's
            comp case policies.
          type: string
        adjusterphone:
          description: >-
            CASE POLICY FIELD - Phone number/other contact info for
            the adjuster on this case policy.  Only available for auto
            insurance or worker's comp case policies.
          type: string
        anotherpartyresponsibleyn:
          description: >-
            CASE POLICY FIELD - Boolean field indicating if another
            party was responsible for this accident.
          enum:
            - ''
            - false
            - true
          type: string
        autoaccidentstate:
          description: >-
            CASE POLICY FIELD - Two-letter abbreviation for the state
            in which the auto accident took place. Only meaningful for
            auto insurance case policies.
          type: string
        cancelled:
          description: The date in which the insurance was marked cancelled.
          type: string
        caseinjurydate:
          description: >-
            CASE POLICY FIELD - Date of the injury.  Required for auto
            insurance, legal, and worker's comp case policies.
          type: string
        casepolicytypename:
          description: CASE POLICY FIELD - The name of this type of case policy.
          type: string
        ccmstatusid:
          description: Status ID of current CCM enrollment.
          type: integer
        ccmstatusname:
          description: The name of current CCM enrollment status.
          type: string
        coinsurancepercent:
          description: >-
            The coinsurance percentage for this insurance. If you've
            just POSTed a new insurance you will have to wait for the
            auto eligbility check before this field populates.
          type: number
        copays:
          description: >-
            Details about the copays for this insurance package. If
            you've just POSTed a new insurance you will have to wait
            for the auto eligbility check before these populate.
          items:
            $ref: '#/components/schemas/Copays'
          type: array
        descriptionofinjury:
          description: >-
            CASE POLICY FIELD - A description of the injury.  Only
            available for auto insurance and worker's comp case
            policies.
          type: string
        eligibilitylastchecked:
          description: Date the eligibility was last checked.
          type: string
        eligibilitymessage:
          description: >-
            The message, usually from our engine, of the eligibility
            check.
          type: string
        eligibilityreason:
          description: >-
            The source of the current status. Athena is our
            eligibility engine.
          type: string
        eligibilitystatus:
          description: Current eligibility status of this insurance package.
          type: string
        employerid:
          description: The employer ID associated with the patient's insurance.
          type: string
        expirationdate:
          description: Date the insurance expires.
          type: string
        icd10codes:
          description: CASE POLICY FIELD - See documentation for ICD9CODES.
          items:
            type: string
          type: array
        icd9codes:
          description: >-
            CASE POLICY FIELD - A list of ICD9 accepted diagnosis
            codes. Only available for worker's comp case policies.
          items:
            type: integer
          type: array
        injuredbodypart:
          description: >-
            CASE POLICY FIELD - Text field for describing the injured
            body part.  Only available for auto insurance  and
            worker's comp case policies.
          type: string
        insuranceclaimnumber:
          description: >-
            CASE POLICY FIELD - The auto insurance claim number or the
            worker's comp claim number.
          type: string
        insuranceid:
          description: The athena insurance policy ID.
          type: string
        insuranceidnumber:
          description: >-
            The insurance policy ID number (as presented on the
            insurance card itself).
          type: string
        insurancepackageaddress1:
          description: Address 1 for the AthenaNet insurance Package.
          type: string
        insurancepackageaddress2:
          description: Address 2 for the AthenaNet insurance Package.
          type: string
        insurancepackagecity:
          description: City for the AthenaNet insurance Package.
          type: string
        insurancepackageid:
          description: The athenaNet insurance package ID.
          type: integer
        insurancepackagestate:
          description: State of the AthenaNet insurance package
          type: string
        insurancepackagezip:
          description: Zip code of the AthenaNet insurance package
          type: string
        insurancephone:
          description: >-
            The phone number for the insurance company. Note: This
            defaults to the insurance package phone number. If this is
            set, it will override it. Likewise if blanked out, it will
            go back to default.
          type: string
        insuranceplandisplayname:
          description: Superpackagename of the specific insurance package.
          type: string
        insuranceplanname:
          description: Name of the specific insurance package.
          type: string
        insurancepolicyholder:
          description: The full name of the insurance policy holder.
          type: string
        insurancepolicyholderaddress1:
          description: The first address line of the insurance policy holder.
          type: string
        insurancepolicyholderaddress2:
          description: The second address line of the insurance policy holder.
          type: string
        insurancepolicyholdercity:
          description: The city of the insurance policy holder.
          type: string
        insurancepolicyholdercountrycode:
          description: >-
            The country code (3 letter) of the insurance policy
            holder.
          type: string
        insurancepolicyholdercountryiso3166:
          description: >-
            The <a
            href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
            3166</a> country code of the insurance policy holder.
          type: string
        insurancepolicyholderdob:
          description: The DOB of the insurance policy holder (mm/dd/yyyy).
          type: string
        insurancepolicyholderfirstname:
          description: >-
            The first name of the insurance policy holder.  Except for
            self-pay, required for new policies.
          type: string
        insurancepolicyholderlastname:
          description: >-
            The last name of the insurance policy holder.  Except for
            self-pay, required for new policies.
          type: string
        insurancepolicyholdermiddlename:
          description: The middle name of the insurance policy holder.
          type: string
        insurancepolicyholdersex:
          description: >-
            The sex of the insurance policy holder.  Except for
            self-pay, required for new policies.
          type: string
        insurancepolicyholderssn:
          description: The SSN of the insurance policy holder.
          type: string
        insurancepolicyholderstate:
          description: The state of the insurance policy holder.
          type: string
        insurancepolicyholdersuffix:
          description: The suffix of the insurance policy holder.
          type: string
        insurancepolicyholderzip:
          description: The zip of the insurance policy holder.
          type: string
        insurancetype:
          description: >-
            Type of insurance. E.g., Medicare Part B, Group Policy,
            HMO, etc.
          type: string
        insuredentitytypeid:
          description: The ID of the entity type for this insurance.
          type: integer
        insuredpcp:
          type: string
        insuredpcpnpi:
          description: >-
            The national provider id of the primary care physcian
            assicated with the insurance.
          type: integer
        ircid:
          description: Insurance category / company internal ID
          type: integer
        ircname:
          description: >-
            Insurance category / company. E.g., United Healthcare,
            BCBS-MA, etc.
          type: string
        issuedate:
          description: Date the insurance was issued.
          type: string
        policynumber:
          description: >-
            The insurance group number.  This is sometimes present on
            an insurance card.
          type: string
        relatedtoautoaccidentyn:
          description: >-
            CASE POLICY FIELD - Boolean field indicating whether this
            case policy is related to an auto accident.
          enum:
            - ''
            - false
            - true
          type: string
        relatedtoemploymentyn:
          description: >-
            CASE POLICY FIELD - Boolean field indicating whether this
            case policy is related to the patient's employer.
          enum:
            - ''
            - false
            - true
          type: string
        relatedtootheraccidentyn:
          description: >-
            CASE POLICY FIELD - Boolean field indicating whether this
            case policy is related to another accident.  Only
            available for worker's comp case policies.
          enum:
            - ''
            - false
            - true
          type: string
        relationshiptoinsured:
          description: This patient's relationship to the policy holder (text).
          type: string
        relationshiptoinsuredid:
          default: 1
          description: >-
            This patient's relationship to the policy holder (as an
            ID).  See <a
            href="/workflows/patient-relationship-mapping">the
            mapping</a>.
          type: integer
        repricername:
          description: >-
            CASE POLICY FIELD - Name for the repricer.  Only available
            for worker's comp case policies.
          type: string
        repricerphone:
          description: >-
            CASE POLICY FIELD - Phone number for the repricer.  Only
            available for worker's comp case policies.
          type: string
        sequencenumber:
          description: >-
            1 = primary, 2 = secondary, 3 = tertiary, etc.  Must have
            a primary before a secondary and a secondary before a
            tertiary, etc.
          type: integer
        slidingfeeplanid:
          description: >-
            If the patient is on a sliding fee plan, this is the ID of
            that plan.  See /slidingfeeplans.
          type: integer
        stateofreportedinjury:
          description: >-
            CASE POLICY FIELD - Two-letter state abbreviation for the
            state this injury was reported in.  Only available for
            worker's comp case policies.
          type: string
      type: object
    RequestInsurance:
      x-external-id: insuranceid
      properties:
        departmentid:
          description: >-
            If set, we will use the department id in an attempt to add
            to the local patient.
          type: integer
        expirationdate:
          description: >-
            Set the date that the insurance will expire. This is usually
            a date within the next year and not in the past.
          type: string
        insuranceidnumber:
          description: >-
            The insurance policy ID number (as presented on the
            insurance card itself).
          type: string
        insurancepackageid:
          description: The athenaNet insurance package ID.
          type: integer
        insurancephone:
          description: >-
            The phone number for the insurance company. Note: This
            defaults to the insurance package phone number. If this is
            set, it will override it. Likewise if blanked out, it will
            go back to default.
          type: string
        insurancepolicyholder:
          description: >-
            Name of the entity who holds this insurance policy. Required
            if entity type is set to non-person.
          type: string
        insurancepolicyholderaddress1:
          description: The first address line of the insurance policy holder.
          type: string
        insurancepolicyholderaddress2:
          description: The second address line of the insurance policy holder.
          type: string
        insurancepolicyholdercity:
          description: The city of the insurance policy holder.
          type: string
        insurancepolicyholdercountrycode:
          description: >-
            The country code (3 letter) of the insurance policy holder.
            Either this or insurancepolicyholdercountryiso3166 are
            acceptable.  Defaults to USA.
          type: string
        insurancepolicyholdercountryiso3166:
          description: >-
            The <a
            href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
            3166</a> country code of the insurance policy holder.
            Either this or insurancepolicyholdercountrycode are
            acceptable.  Defaults to US.
          type: string
        insurancepolicyholderdob:
          description: The DOB of the insurance policy holder (mm/dd/yyyy).
          type: string
        insurancepolicyholderfirstname:
          description: >-
            The first name of the insurance policy holder.  Except for
            self-pay, required for new policies.
          type: string
        insurancepolicyholderlastname:
          description: >-
            The last name of the insurance policy holder.  Except for
            self-pay, required for new policies.
          type: string
        insurancepolicyholdermiddlename:
          description: The middle name of the insurance policy holder.
          type: string
        insurancepolicyholdersex:
          description: >-
            The sex of the insurance policy holder.  Except for
            self-pay, required for new policies.
          enum:
            - ''
            - M
            - F
          type: string
        insurancepolicyholderssn:
          description: The SSN of the insurance policy holder.
          type: string
        insurancepolicyholderstate:
          description: The state of the insurance policy holder.
          type: string
        insurancepolicyholdersuffix:
          description: The suffix of the insurance policy holder.
          type: string
        insurancepolicyholderzip:
          description: The zip of the insurance policy holder.
          type: string
        insuredentitytypeid:
          enum:
            - ''
            - 1
            - 2
          type: string
        issuedate:
          description: >-
            Set the date that the insurance was issued. This is usually
            a date in the past year and not in the future.
          type: string
        policynumber:
          description: >-
            The insurance group number.  This is sometimes present on an
            insurance card.
          type: string
        relationshiptoinsuredid:
          default: 1
          description: >-
            This patient's relationship to the policy holder (as an
            ID).  See <a href="/workflows/patient-relationship-mapping">
            the mapping</a>. Please note that if this is set to 12,
            Entity Type must be set to 2.
          type: integer
        sequencenumber:
          description: >-
            1 = primary, 2 = secondary.  Must have a primary before a
            secondary. This field is required if the insurance package
            is not a case policy.
          type: integer
        updateappointments:
          description: >-
            If set to true, automatically updates all future
            appointments to use this insurance as primary or secondary,
            respective to the sequence number.
          type: boolean
        validateinsuranceidnumber:
          description: >-
            BETA FIELD: If true, this makes sure that you have entered a
            valid INSURANCEIDNUMBER.  If you didn't it will error.
            Setting this is probably a good thing and means you
            shouldn't have to do a ton of validation on the ID number.
          type: boolean
      required:
        - insurancepackageid
      type: object
    insurancePackages:
      x-external-id: insuranceid
      properties:
        addresslist:
          description: >-
            The addresses associated with this insurance package. The
            default address is listed first.
          items:
            type: string
          type: array
        affiliations:
          description: The affiliations associated with this insurance package.
          items:
            type: string
          type: array
        insurancepackageid:
          description: The athena insurance package ID.
          type: integer
        insuranceplanname:
          description: Name of the specific insurance package.
          type: string
      type: object
    Provider:
      x-external-id: providerid
      properties:
        acceptingnewpatientsyn:
          description: >-
            Indicates whether the provider is accepting new patients.
            This field is currently only for informational purposes,
            and does not drive any athenaNet functionality.
          enum:
            - ''
            - false
            - true
          type: string
        ansinamecode:
          description: This is the ANSI name with ANSI code for this provider's
            specialty.
          type: string
        ansispecialtycode:
          description: This is the ANSI code for this provider's specialty.
          type: string
        billable:
          description: Indicates if this is a billable provider.
          enum:
            - ''
            - false
            - true
          type: string
        createencounteroncheckinyn:
          description: >-
            If true, appointments scheduled with this provider will
            create an encounter when the appointment is checked in for
            encounter supported appointment types. Only applies to the
            primary providerid. If the provider has other IDs with the
            same API, please use 'showallproviderids' to see which IDs
            create encounters.
          enum:
            - ''
            - false
            - true
          type: string
        createencounterprovideridlist:
          description: >-
            A list of provider IDs for this provider NPI that will
            create an encounter when the appointment is checked in for
            encounter supported appointment types. Only populated if
            'showallproviderids' is set.
          type: string
        displayname:
          description: The preferred name to use when displaying this provider.
          type: string
        entitytype:
          description: Either "Person" or "Non-Person" (e.g. X-Ray machines)
          type: string
        federalidnumber:
          description: >-
            The federal ID number for provider, if SHOWFEDERALIDNUMBER
            is set.
          type: string
        firstname:
          description: The provider's first name.
          type: string
        hideinportalyn:
          description: >-
            If set, this provider does not appear in
            athenaCommunicator's web portal.
          enum:
            - ''
            - false
            - true
          type: string
        homedepartment:
          description: >-
            For certain purposes, this can be considered to be the
            "home" or default department for a provider.
          type: string
        lastname:
          description: The provider's last name.
          type: string
        npi:
          description: The NPI for this provider, if available.
          type: integer
        otherprovideridlist:
          description: >-
            When showallproviderids is set to true, a list of all
            other athenaNet providers IDs that may refer to this same
            provider. If not present with showallproviderids, there
            are no other IDs other than the primary ID.
          type: string
        personalpronouns:
          description: The preferred personal pronouns of this provider.
          type: string
        providergrouplist:
          description: >-
            When showallproviderids is set to true, a list of all
            provider groups that this provider is registered in. Data
            is only relevant if a practice is using
            Provider-Group-Based Data Permissions in their practice.
          type: string
        providerid:
          description: >-
            The ID to be used for this provider. Note that in
            athenaNet, an individual provider (as defined by a unique
            NPI) may have multiple provider IDs.  For the API, we have
            collapsed these to a single canonical ID.
          type: integer
        providertype:
          description: >-
            There is a long potential list of provider type in the
            form "full name (id)", but "MD", "NP" or "NP S" (Nurse
            Practitioner (Supervising)), "RES" (resident), "EQUIP",
            "DO", "PA" or "PASUP" (Physician's Assistant
            (Supervising)), "TECH", "RN", LPT", "CRNA" or "CRNASUP"
            (Certified Registered Nurse Anesthesiologist
            (Supervising)), and MA (Medical Assistant) are among the
            most common.
          type: string
        providertypeid:
          description: >-
            This is just the ID (a text string) such as "NP" or "NP S"
            for the provider type.
          type: string
        providerusername:
          description: The username of the provider.
          type: string
        scheduleresourcetype:
          description: Name of the scheduling resource type tied to the provider.
          type: string
        schedulingname:
          description: >-
            The scheduling name for this provider (as used in
            athenaNet).
          type: string
        sex:
          description: The sex of this provider.
          type: string
        specialty:
          description: A friendly name for this provider's specialty.
          type: string
        specialtyid:
          description: The ID of the provider's specialty.
          type: integer
        supervisingproviderid:
          description: The ID of the supervising provider.
          type: integer
        supervisingproviderusername:
          description: The username of the supervising provider.
          type: string
        usualdepartmentid:
          description: >-
            The "usual" department for this provider, if
            SHOWUSUALDEPARTMENTGUESSTHRESHOLD is set.
          type: integer
      type: object
    AppointmentResponse:
      x-external-id: appointmentid
      type: object
      properties:
        appointmentids:
          type: object
          description: An hash of appointment IDs to the time requested.
    RequestCreateAppointment:
      x-external-id: appointmentid
      properties:
        appointmentdate:
          description: The appointment date for the new open appointment slot (mm/dd/yyyy).
          type: string
        appointmenttime:
          description: The time (hh24:mi) for the new appointment slot.  Multiple times (either as a comma delimited list or multiple POSTed values) are allowed.  24 hour time.
          items:
            type: string
          type: array
        appointmenttypeid:
          description: The appointment type ID to be created.  Either this or a reason must be provided.
          type: integer
        departmentid:
          description: The athenaNet department ID.
          type: integer
        providerid:
          description: The athenaNet provider ID.
          type: integer
        reasonid:
          description: The appointment reason (/patientappointmentreasons) to be created. Either this or a raw appointment type ID must be provided.
          type: integer
      required:
        - appointmenttime
        - appointmentdate
        - departmentid
        - providerid
      type: object
    Checkin:
      x-external-id: checkinid
      type: object
      properties:
        message:
          description: Debugging text in case of failure.
          type: string
        success:
          description: >-
            Indicates that this call was successful.  Processing
            should still continue even if there was an error with this
            call.  Generally, this will only be false if the
            appointment is in a good state to start the process, but
            the startcheckin call was already used.  Other errors may
            occur, similar to potential errors with
            /appointments/{appointmentid}/checkin.
          enum:
            - ''
            - false
            - true
          type: string
    Diagnoses:
      x-external-id: diagnosisid
      properties:
        description:
          description: Brief description for this SNOMED Code
          type: string
        diagnosisid:
          description: Athena ID for this diagnosis
          type: integer
        icdcodes:
          description: List of relevant ICD codes for this diagnosis
          items:
            properties:
              code:
                description: Actual ICD code for this diagnosis
                type: string
              codeset:
                description: Codeset for this code (ICD9 or ICD10)
                type: string
              description:
                description: Brief description for this code
                type: string
            type: object
          type: array
        note:
          description: The note entered for this diagnosis.
          type: string
        snomedcode:
          description: SNOMED Code for this diagnosis
          type: integer
      type: object
    Encounter:
      x-external-id: encounterid
      type: object
      properties:
        appointmentid:
          description: Athena appointment ID resulting in this encounter
          type: integer
        closeddate:
          description: date when this encounter was closed
          type: string
        closeduser:
          description: Username of the provider who closed this encounter
          type: string
        departmentid:
          description: The athena department ID of this encounter
          type: integer
        diagnoses:
          description: List of diagnoses for this encounter
          items:
            $ref: '#/components/schemas/Diagnoses'
          type: array
        encounterdate:
          description: Date when this encounter occured
          type: string
        encounterid:
          description: Athena ID for this encounter
          type: integer
        encountertype:
          description: >-
            Type of encounter (FLOWSHEET, ORDERSONLY, VISIT, etc.). By
            default only VISIT and ORDERSONLY are shown, use
            INCLUDEALLtypeS flag to see others.
          type: string
        encountervisitname:
          description: The visit name for this encounter
          type: string
        lastreopened:
          description: >-
            The date the encounter was last reopened. The field will
            not be present if the encounter has not be closed.
          type: string
        lastupdated:
          description: The date the encounter was last updated
          type: string
        patientlocation:
          description: Patient location
          type: string
        patientlocationid:
          description: Athena ID for the patient location
          type: integer
        patientstatus:
          description: Patient status
          type: string
        patientstatusid:
          description: Athena ID for the patient status
          type: integer
        providerfirstname:
          description: First name of the provider for this encounter
          type: string
        providerid:
          description: The ID of the provider for this encounter
          type: integer
        providerlastname:
          description: Last name of the provider for this encounter
          type: string
        providerphone:
          description: Phone number of the provider for this encounter
          type: string
        stage:
          description: Last stage of the encounter
          type: string
        status:
          description: >-
            Status of this encounter (CLOSED, OPEN, PEND). By default
            only OPEN, CLOSED, and REVIEW statuses are shown, use
            INCLUDEALLSTATUSES flag to see others.
          type: string
    PutEncounter200Response:
      type: object
      properties:
        errormessage:
          description: >-
            If the operation failed, this will contain any error
            messages.
          type: string
        success:
          description: Whether the operation was successful.
          enum:
            - ''
            - false
            - true
          type: string
    PatientLocation:
      x-external-id: patientid
      type: object
      properties:
        defaultoncheckin:
          description: >-
            Whether this is the default location once the appointment
            is checked in and the encounter is created
          enum:
            - ''
            - false
            - true
          type: string
        name:
          type: string
          description: Name of this location
        patientlocationid:
          type: integer
          description: Athena patient location ID
    PatientStatus:
      x-external-id: patientid
      type: object
      properties:
        patientstatusname:
          type: string
          description: The patient status name
        patientstatusid:
          type: integer
          description: The patient status ID.
    PutAppointment200Response:
      x-external-id: appointmentid
      type: object
      properties:
        appointmentid:
          description: Appointment ID of the booked appointment
          type: string
        appointmentstatus:
          description: >-
            The athenaNet appointment status. There are several possible
            statuses.  x=cancelled. f=future. (It can include appointments where
            were never checked in, even if the appointment date is in the past.
            It is up to a practice to cancel appointments as a no show when
            appropriate to do so.)  o=open. 2=checked in. 3=checked out.
            4=charge entered (i.e. a past appointment).
          type: string
        appointmenttype:
          description: >-
            The practice-friendly (not patient friendly) name for this
            appointment type.  Note that this may <strong>not</strong> be the
            same as the booked appointment because of "generic" slots.
          type: string
        appointmenttypeid:
          description: >-
            This is the ID for the appointment type.   Note that this may
            <strong>not</strong> be the same as the booked appointment because
            of "generic" slots.
          type: string
        chargeentrynotrequired:
          description: >-
            This field will tell if an appointment has been marked as not
            requiring change entry.
          enum:
            - ''
            - false
            - true
          type: string
        chargeentrynotrequiredreason:
          description: >-
            This field will give the reason that an appointment has been marked
            as not requiring charge entry.
          type: string
        claims:
          description: As detailed in /claims, if requested.
          items:
            properties:
              appointmentid:
                description: The appointment ID associated with this claim.
                type: string
              billedproviderid:
                description: The provider ID of the billing provider for this claim.
                type: string
              billedservicedate:
                description: The billed date of service.
                type: string
              chargeamount:
                description: The total amount billed for all services from this claim.
                type: string
              claimcreateddate:
                description: The date the claim was created.
                type: string
              claimid:
                description: >-
                  athenaNet's internal ID for this claim, specific to the
                  practice.
                type: string
              diagnoses:
                description: >
                  <p>Diagnoses is an array of all diagnoses.   Each entry in the
                  array is a hash with several fields.  /ccda is a better
                  clinical representation.  These fields are:</p>
                items:
                  properties:
                    deleteddiagnosis:
                      description: >-
                        In certain cases, diagnoses may be added and then
                        removed from a particular claim.  In normal
                        circumstances, this will be false.  However, if a
                        diagnosis was removed, this will be true.
                      type: string
                    diagnosiscategory:
                      description: The category for this diagnosis.
                      type: string
                    diagnosiscodeset:
                      description: Either ICD9 or ICD10.
                      type: string
                    diagnosisdescription:
                      description: A description of this diagnosis.
                      type: string
                    diagnosisid:
                      description: A unique ID related to this diagnosis.
                      type: string
                    diagnosisrawcode:
                      description: >-
                        The raw ICD-9 code.  This will migrate to ICD-10 in the
                        future.
                      type: string
                  type: object
                type: array
              patientpayer:
                description: >-
                  The status and notes of a responsible payer.  This payer is
                  the patient.
                type: string
              primaryinsurancepayer:
                description: >-
                  The status and notes of a responsible payer.  This payer is
                  the primary insurace.
                type: string
              procedures:
                description: >
                  <p>Procedures is an array of all procedures.  /ccda is a
                  better clinical representation.   These fields are:</p>
                items:
                  properties:
                    allowableamount:
                      description: >-
                        The total amount expected from payer for all services
                        from this procedure.
                      type: string
                    allowablemax:
                      description: >-
                        The maximum amount expected from payer for all services
                        from this procedure.
                      type: string
                    allowablemin:
                      description: >-
                        The minimum amount expected from payer for all services
                        from this procedure.
                      type: string
                    chargeamount:
                      description: The amount charged for this procedure.
                      type: string
                    procedurecategory:
                      description: The category name associated with this procedure.
                      type: string
                    procedurecode:
                      description: The CPT code associated with this procedure.
                      type: string
                    proceduredescription:
                      description: A description of this procedure.
                      type: string
                    transactionid:
                      description: >-
                        The ID of the last transaction associated with the
                        claim.
                      type: string
                  type: object
                type: array
              referringproviderid:
                description: >-
                  The referring provider ID for this claim.  See
                  /referringproviders.  This is not the same as the ID from the
                  /providers call.
                type: integer
              secondaryinsurancepayer:
                description: >-
                  The status and notes of a responsible payer.  This payer is
                  the secondary insurace.
                type: string
              transactiondetails:
                description: >-
                  A hash of ids ("transactionid") to amounts; these should sum
                  to the chargeamount. Please note that this has been deprecated
                  in lieu of the data being available in the procedures section.
                type: string
              transactionid:
                description: >-
                  A unique ID for the primary transaction this claim
                  represents.  May be useful for debugging.
                type: string
            type: object
          type: array
        copay:
          description: >-
            Expected copay for this appointment. Based on the appointment type,
            the patient's primary insurance, and any copays collected.  To see
            the amounts used in this calculated value, see the APPOINTMENTCOPAY
            fields.
          type: string
        date:
          description: The appointment date.
          type: string
        departmentid:
          type: string
        duration:
          description: In minutes
          type: integer
        encounterid:
          description: >-
            The encounter id associated with this appointment, useful for
            certain other calls.  Only present for appointments with Clinicals
            that have been checked in.
          type: string
        encounterprep:
          description: >-
            If true, encounter prep has been started for the encounter
            associated with this appointment.
          enum:
            - ''
            - false
            - true
          type: string
        encounterstate:
          description: >-
            The status of the clinical encounter associated with this
            appointment (OPEN, CLOSED, DELETED, PEND, etc.). This differs from
            encounterstatus, which refers to the status of the patient in the
            encounter.
          type: string
        encounterstatus:
          description: >-
            The status of this patient in the encounter (READYFORSTAFF,
            WITHSTAFF, READFORPROVIDER, CHECKEDOUT).  Only present for
            appointments with Clinicals that have been checked in.
          type: string
        frozenyn:
          description: If true, this appointment slot is frozen
          type: string
        hl7providerid:
          description: >-
            This is the raw provider ID that should be used ONLY if using this
            appointment in conjunction with an HL7 message and with
            athenahealth's prior guidance. It is only available in some
            situations.
          type: integer
        insurances:
          description: >-
            List of active patient insurance packages. Only shown for single or
            multiple booked appointments if SHOWINSURANCE is set.
          items:
            properties:
              adjusterfax:
                description: >-
                  CASE POLICY FIELD - Fax for the adjuster on this case policy.
                  Only available for auto insurance or worker's comp case
                  policies.
                type: string
              adjusterfirstname:
                description: >-
                  CASE POLICY FIELD - First name of the adjuster on this case
                  policy.  Only available for auto insurance or worker's comp
                  case policies.
                type: string
              adjusterlastname:
                description: >-
                  CASE POLICY FIELD - Last name of the adjuster on this case
                  policy.  Only available for auto insurance or worker's comp
                  case policies.
                type: string
              adjusterphone:
                description: >-
                  CASE POLICY FIELD - Phone number/other contact info for the
                  adjuster on this case policy.  Only available for auto
                  insurance or worker's comp case policies.
                type: string
              anotherpartyresponsibleyn:
                description: >-
                  CASE POLICY FIELD - Boolean field indicating if another party
                  was responsible for this accident.
                enum:
                  - ''
                  - false
                  - true
                type: string
              autoaccidentstate:
                description: >-
                  CASE POLICY FIELD - Two-letter abbreviation for the state in
                  which the auto accident took place. Only meaningful for auto
                  insurance case policies.
                type: string
              cancelled:
                description: The date in which the insurance was marked cancelled.
                type: string
              caseinjurydate:
                description: >-
                  CASE POLICY FIELD - Date of the injury.  Required for auto
                  insurance, legal, and worker's comp case policies.
                type: string
              casepolicytypename:
                description: CASE POLICY FIELD - The name of this type of case policy.
                type: string
              ccmstatusid:
                description: Status ID of current CCM enrollment.
                type: integer
              ccmstatusname:
                description: The name of current CCM enrollment status.
                type: string
              coinsurancepercent:
                description: >-
                  The coinsurance percentage for this insurance. If you've just
                  POSTed a new insurance you will have to wait for the auto
                  eligbility check before this field populates.
                type: number
              copays:
                description: >-
                  Details about the copays for this insurance package. If you've
                  just POSTed a new insurance you will have to wait for the auto
                  eligbility check before these populate.
                type: string
              descriptionofinjury:
                description: >-
                  CASE POLICY FIELD - A description of the injury.  Only
                  available for auto insurance and worker's comp case policies.
                type: string
              eligibilitylastchecked:
                description: Date the eligibility was last checked.
                type: string
              eligibilitymessage:
                description: >-
                  The message, usually from our engine, of the eligibility
                  check.
                type: string
              eligibilityreason:
                description: >-
                  The source of the current status. Athena is our eligibility
                  engine.
                type: string
              eligibilitystatus:
                description: Current eligibility status of this insurance package.
                type: string
              employerid:
                description: The employer ID associated with the patient's insurance.
                type: string
              expirationdate:
                description: Date the insurance expires.
                type: string
              icd10codes:
                description: CASE POLICY FIELD - See documentation for ICD9CODES.
                type: string
              icd9codes:
                description: >-
                  CASE POLICY FIELD - A list of ICD9 accepted diagnosis codes.
                  Only available for worker's comp case policies.
                type: string
              injuredbodypart:
                description: >-
                  CASE POLICY FIELD - Text field for describing the injured body
                  part.  Only available for auto insurance  and worker's comp
                  case policies.
                type: string
              insuranceclaimnumber:
                description: >-
                  CASE POLICY FIELD - The auto insurance claim number or the
                  worker's comp claim number.
                type: string
              insuranceid:
                description: The athena insurance policy ID.
                type: string
              insuranceidnumber:
                description: >-
                  The insurance policy ID number (as presented on the insurance
                  card itself).
                type: string
              insurancepackageaddress1:
                description: Address 1 for the AthenaNet insurance Package.
                type: string
              insurancepackageaddress2:
                description: Address 2 for the AthenaNet insurance Package.
                type: string
              insurancepackagecity:
                description: City for the AthenaNet insurance Package.
                type: string
              insurancepackageid:
                description: The athenaNet insurance package ID.
                type: integer
              insurancepackagestate:
                description: State of the AthenaNet insurance package
                type: string
              insurancepackagezip:
                description: Zip code of the AthenaNet insurance package
                type: string
              insurancephone:
                description: >-
                  The phone number for the insurance company. Note: This
                  defaults to the insurance package phone number. If this is
                  set, it will override it. Likewise if blanked out, it will go
                  back to default.
                type: string
              insuranceplandisplayname:
                description: Superpackagename of the specific insurance package.
                type: string
              insuranceplanname:
                description: Name of the specific insurance package.
                type: string
              insurancepolicyholder:
                description: The full name of the insurance policy holder.
                type: string
              insurancepolicyholderaddress1:
                description: The first address line of the insurance policy holder.
                type: string
              insurancepolicyholderaddress2:
                description: The second address line of the insurance policy holder.
                type: string
              insurancepolicyholdercity:
                description: The city of the insurance policy holder.
                type: string
              insurancepolicyholdercountrycode:
                description: The country code (3 letter) of the insurance policy holder.
                type: string
              insurancepolicyholdercountryiso3166:
                description: >-
                  The <a
                  href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
                  3166</a> country code of the insurance policy holder.
                type: string
              insurancepolicyholderdob:
                description: The DOB of the insurance policy holder (mm/dd/yyyy).
                type: string
              insurancepolicyholderfirstname:
                description: >-
                  The first name of the insurance policy holder.  Except for
                  self-pay, required for new policies.
                type: string
              insurancepolicyholderlastname:
                description: >-
                  The last name of the insurance policy holder.  Except for
                  self-pay, required for new policies.
                type: string
              insurancepolicyholdermiddlename:
                description: The middle name of the insurance policy holder.
                type: string
              insurancepolicyholdersex:
                description: >-
                  The sex of the insurance policy holder.  Except for self-pay,
                  required for new policies.
                type: string
              insurancepolicyholderssn:
                description: The SSN of the insurance policy holder.
                type: string
              insurancepolicyholderstate:
                description: The state of the insurance policy holder.
                type: string
              insurancepolicyholdersuffix:
                description: The suffix of the insurance policy holder.
                type: string
              insurancepolicyholderzip:
                description: The zip of the insurance policy holder.
                type: string
              insurancetype:
                description: >-
                  Type of insurance. E.g., Medicare Part B, Group Policy, HMO,
                  etc.
                type: string
              insuredentitytypeid:
                description: The ID of the entity type for this insurance.
                type: integer
              insuredpcp:
                type: string
              insuredpcpnpi:
                description: >-
                  The national provider id of the primary care physcian
                  assicated with the insurance.
                type: integer
              ircid:
                description: Insurance category / company internal ID
                type: integer
              ircname:
                description: >-
                  Insurance category / company. E.g., United Healthcare,
                  BCBS-MA, etc.
                type: string
              issuedate:
                description: Date the insurance was issued.
                type: string
              policynumber:
                description: >-
                  The insurance group number.  This is sometimes present on an
                  insurance card.
                type: string
              relatedtoautoaccidentyn:
                description: >-
                  CASE POLICY FIELD - Boolean field indicating whether this case
                  policy is related to an auto accident.
                enum:
                  - ''
                  - false
                  - true
                type: string
              relatedtoemploymentyn:
                description: >-
                  CASE POLICY FIELD - Boolean field indicating whether this case
                  policy is related to the patient's employer.
                enum:
                  - ''
                  - false
                  - true
                type: string
              relatedtootheraccidentyn:
                description: >-
                  CASE POLICY FIELD - Boolean field indicating whether this case
                  policy is related to another accident.  Only available for
                  worker's comp case policies.
                enum:
                  - ''
                  - false
                  - true
                type: string
              relationshiptoinsured:
                description: This patient's relationship to the policy holder (text).
                type: string
              relationshiptoinsuredid:
                default: 1
                description: >-
                  This patient's relationship to the policy holder (as an ID).
                  See <a href="/workflows/patient-relationship-mapping">the
                  mapping</a>.
                type: integer
              repricername:
                description: >-
                  CASE POLICY FIELD - Name for the repricer.  Only available for
                  worker's comp case policies.
                type: string
              repricerphone:
                description: >-
                  CASE POLICY FIELD - Phone number for the repricer.  Only
                  available for worker's comp case policies.
                type: string
              sequencenumber:
                description: >-
                  1 = primary, 2 = secondary, 3 = tertiary, etc.  Must have a
                  primary before a secondary and a secondary before a tertiary,
                  etc.
                type: integer
              slidingfeeplanid:
                description: >-
                  If the patient is on a sliding fee plan, this is the ID of
                  that plan.  See /slidingfeeplans.
                type: integer
              stateofreportedinjury:
                description: >-
                  CASE POLICY FIELD - Two-letter state abbreviation for the
                  state this injury was reported in.  Only available for
                  worker's comp case policies.
                type: string
            type: object
          type: array
        patient:
          description: As detailed in /patients, if requested.
          type: string
        patientappointmenttypename:
          description: >-
            The patient-friendly name for this appointment type.  Note that this
            may <strong>not</strong> be the same as the booked appointment
            because of "generic" slots.
          type: string
        patientid:
          description: The athenaNet patient ID for this appointment
          type: string
        patientlocationid:
          description: >-
            The location of the patient. See /patientlocation for practice list.
            Only present for appointments with Clinicals that have been checked
            in.
          type: string
        providerid:
          type: string
        referringproviderid:
          description: The referring provider ID.
          type: integer
        renderingproviderid:
          description: The rendering provider ID.
          type: integer
        rescheduledappointmentid:
          description: >-
            When an appointment is rescheduled, this is the ID of the
            replacement appointment.
          type: string
        startcheckin:
          description: >-
            The timestamp when the appointment started the check in process. If
            this is set while an appointment is still in status 'f', it means
            that the check-in process has begun but is not yet completed.
          type: string
        starttime:
          description: >-
            As HH:MM (where HH is the 0-23 hour and MM is the minute).  This
            time is local to the department.
          type: string
        stopcheckin:
          description: >-
            The timestamp when the check-in process was finished for this
            appointment.
          type: string
        supervisingproviderid:
          description: The supervising provider ID.
          type: integer
        urgentyn:
          description: Urgent flag for the appointment.
          enum:
            - ''
            - false
            - true
          type: string
        useexpectedprocedurecodes:
          description: An array of expected procedure codes attached to this appointment.
          items:
            properties:
              procedurecode:
                description: The ID of the code.
                type: string
              procedurecodedescription:
                description: The description of the code.
                type: string
            type: object
          type: array
    Appointment:
      x-external-id: apointmentid
      required:
        - patientid
      type: object
      properties:
        appointmenttypeid:
          description: >-
            The appointment type to be booked.  This field should never be used
            for booking appointments for web-based scheduling. The use of this
            field is reserved for digital check-in (aka "kiosk") or an
            application used by practice staff.  One of this or reasonid is
            required.
          type: integer
        bookingnote:
          description: A note from the patient about why this appointment is being booked
          type: string
        departmentid:
          description: The athenaNet department ID.
          type: integer
        donotsendconfirmationemail:
          description: >-
            For clients with athenaCommunicator, certain appointment types can
            be configured to have an appointment confirmation email sent to the
            patient at time of appointment booking. If this parameter is set to
            true, that email will not be sent.  This should only be used if you
            plan on sending a confirmation email via another method.
          type: boolean
        ignoreschedulablepermission:
          description: >-
            By default, we allow booking of appointments marked as schedulable
            via the web.  This flag allows you to bypass that restriction for
            booking.
          type: boolean
        insuranceinfo:
          description: >-
            Patient insurance information, which will be added to the note on
            the appointment.
          properties:
            insurancecompany:
              description: The name of the insurance company.
              type: string
            insurancegroupid:
              description: If available, any identifier for the insurance group.
              type: string
            insuranceidnumber:
              description: The insurance identifier for this individual patient.
              type: string
            insurancenote:
              description: >-
                Any extra information provided by the patient about insurance
                coverage.
              type: string
            insurancephone:
              description: The phone number for the insurance company.
              type: string
            insuranceplanname:
              description: The insurance plan name (e.g. "HMO Blue").
              type: string
            insurancepolicyholder:
              description: The full name of the insurance policy holder.
              type: string
            patientrelationshiptopolicyholder:
              description: >-
                A textual description of the patient's relationship to the
                policyholder.  Recommended: Self, Parent, Spouse, Child, Other.
              type: string
          type: object
        nopatientcase:
          description: >-
            By default, we create a patient case upon booking an appointment for
            new patients.  Setting this to true bypasses that patient case.
          type: boolean
        patientid:
          description: The athenaNet patient ID.
          type: integer
        reasonid:
          description: >-
            The appointment reason ID to be booked.  This field is required for
            booking appointments for web-based scheduling and is a reason that
            is retrieved from the /patientappointmentreasons call.
          type: integer
        urgentyn:
          description: >-
            Set this field in order to set the urgent flag in athena (if the
            practice settings allow for this).
          type: boolean
    RequestCreatePatientCase:
      properties:
        autoclose:
          description: >-
            Documents will, normally, automatically appear in the
            clinical inbox for providers to review. In some cases, you
            might want to force the document to skip the clinical inbox,
            and go directly to the patient chart with a "closed" status.
            For that case, set this to true.
          type: boolean
        callbackname:
          description: The name of the person to call (if other than patient).
          type: string
        callbacknumber:
          description: >-
            The phone number to use to call back the patient (mutually
            exclusive with callbacknumbertype).
          type: string
        callbacknumbertype:
          description: >-
            The phone number type to use to call back the patient
            (mutually exclusive with callbacknumber).
          enum:
            - ''
            - home
            - work
            - mobile
            - emergency contact
            - guarantor
          type: string
        clinicalproviderid:
          description: >-
            The ID of the external provider/lab/pharmacy associated the
            document.
          type: integer
        departmentid:
          description: >-
            The athenaNet department ID associated with the uploaded
            document.
          type: integer
        documentsource:
          description: Explains where this document originated.
          enum:
            - PATIENT
            - CAREGIVER
            - PARTNER
            - PHARMACY
            - LAB
            - PCP
            - SPECIALIST
            - STAFF
            - HOSPITAL
            - OTHER
            - PORTAL
            - Live Operator
          type: string
        documentsubclass:
          description: Subclasses for PATIENTCASE documents
          enum:
            - PATIENTCASE
            - ADMINISTRATIVE
            - BILLING
            - CLINICALQUESTION
            - ELECTRONICMEDICALRECORDS
            - MEDICALRECORDS
            - MEDICATION
            - NEWRX
            - OTHER
            - PATIENTNOSHOW
            - REFERRAL
            - REFILL
          type: string
        internalnote:
          description: >-
            An internal note for the provider or staff. Updating this
            will append to any previous notes.
          type: string
        outboundonly:
          description: >-
            True/false flag indicating the patient case requires an
            outbound phone call and is not a response to an inbound
            call.
          type: boolean
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
        subject:
          description: The subject of this patient case.
          type: string
      required:
        - documentsubclass
        - documentsource
        - departmentid
        - providerid
      type: object
    PostPatientCase200Response:
      x-external-id: patientcaseid
      type: object
      properties:
        errormessage:
          description: >-
            If the operation failed, this will contain an error
            message.
          type: string
        patientcaseid:
          description: The document ID of the new or modified document.
          type: integer
        success:
          description: Returns true/false if the operation was successful.
          enum:
            - ''
            - false
            - true
          type: string
    PatientCase:
      x-external-id: patientcaseid
      properties:
        actionnote:
          description: The most recent action note for a document
          type: string
        assignedto:
          description: Person the document is assigned to
          type: string
        callbackname:
          description: The person to call (if other than patient).
          type: string
        callbacknumber:
          description: The phone number to use to call back the patient.
          type: string
        callbacknumbertype:
          description: >-
            The type of callback number (e.g. home, office, work,
            guarantor).
          type: string
        calltype:
          description: >-
            Type of call.  (Options include: Tickler, Cancellation,
            ReminderCall etc...)
          type: string
        clinicalproviderid:
          description: >-
            DEPRECATED:  The clinical provider ID.  The information
            can now be found in the field entitled 'facilityid'
          type: integer
        createddate:
          description: >-
            Date the document was created. Please use createddatetime
            instead.
          type: string
        createddatetime:
          description: Date/Time (ISO 8601) the document was created
          type: string
        createddocuments:
          description: Documents created by a patient case.
          items:
            properties:
              documentclass:
                description: The document class.
                type: string
              documentid:
                description: The document id.
                type: string
            type: object
          type: array
        createduser:
          description: The user who created this document.
          type: string
        deleteddatetime:
          description: Date/time (ISO 8601) the document was deleted
          type: string
        departmentid:
          description: Department for the document
          type: string
        description:
          description: Description of the document type
          type: string
        documentclass:
          description: Class of document
          type: string
        documentdescription:
          description: >-
            DEPRECATED:  The document description.  The information
            can now be found in the field entitled 'description'
          type: string
        documentroute:
          description: >-
            Explains method by which the document was entered into the
            AthenaNet (INTERFACE (digital), FAX, etc.)
          type: string
        documentsource:
          description: Explains where this document originated.
          enum:
            - ''
            - PATIENT
            - CAREGIVER
            - PARTNER
            - PHARMACY
            - LAB
            - PCP
            - SPECIALIST
            - STAFF
            - HOSPITAL
            - OTHER
            - PORTAL
            - Live Operator
          type: string
        documentsubclass:
          description: Specific type of document
          type: string
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        encounterid:
          description: Encounter ID
          type: string
        externalaccessionid:
          description: >-
            The external accession ID for this document. Format
            depends on the system the ID belongs to.
          type: string
        externalnote:
          description: External note for the patient.
          type: string
        facilityid:
          description: >-
            The ID of the clinical provider associated with this
            clinical document. Clinical providers are a master list of
            providers throughout the country.  These include providers
            as well as radiology centers, labs and pharmacies.
          type: integer
        internalaccessionid:
          description: >-
            The internal accession ID for this document. Format
            depends on the system the ID belongs to.
          type: string
        internalnote:
          description: The 'Internal Note' attached to this document
          type: string
        lastmodifieddate:
          description: >-
            DEPRECATED:  The last modified date.  The information can
            now be found in the field entitled lastmodifieddatetime
          type: string
        lastmodifieddatetime:
          description: Date/time (ISO 8601) the document was last modified
          type: string
        lastmodifieduser:
          description: The user who last modified this document.
          type: string
        observationdatetime:
          description: Date/time the observation was taken
          type: string
        outboundonly:
          description: If the call made in the patient case is outbound
          enum:
            - ''
            - false
            - true
          type: string
        patientcaseid:
          description: The patient case id
          type: string
        patientid:
          description: The athenaNet patient ID.
          type: integer
        priority:
          description: >-
            Document priority, when available. 1 is high, 2 is normal.
            Some labs use other numbers or characters that are
            lab-specific.
          type: string
        providerid:
          description: Provider ID for this document
          type: integer
        providerusername:
          description: >-
            The username of the provider associated with this lab
            result document.
          type: string
        status:
          description: Status of the document
          type: string
        subject:
          description: Subject of the document
          type: string
        tietoorderid:
          description: Order ID of the order this document is tied to, if any
          type: integer
      type: object
    ChangedSubscription200Response:
      type: object
      properties:
        success:
          description: Returns true/false if the operation was successful.
          enum:
            - false
            - true
          type: string
    ChangedSubscription:
      type: object
      properties:
        status:
          description: >-
            Will return one of following statuses: ACTIVE, INACTIVE,
            or PARTIAL. The PARTIAL status means that not all events
            are subscribed to. In the event of a problem, UNKNOWN may
            be returned.
          type: string
        subscriptions:
          description: List of events you are subscribed to.
          items:
            properties:
              eventname:
                description: Name of event
                type: string
            type: object
          type: array
    PatientChanged:
      type: object
      properties:
        patients:
          type: array
          items:
            $ref: '#/components/schemas/Patient'
        totalcount:
          type: integer
    AppointmentChanged:
      type: object
      properties:
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/PutAppointment200Response'
        totalcount:
          type: integer
    PatientCaseChanged:
      type: object
      properties:
        patients:
          type: array
          items:
            $ref: '#/components/schemas/PatientCase'
        totalcount:
          type: integer
    RequestReassignPatientCase:
      properties:
        username:
          description: >-
            AthenNet user to whom the case is being reassigned to.This
            parameter is case-sensitive.
          type: string
      required:
        - username
      type: object
    PutReassignPatient200Response:
      type: object
      properties:
        assignedto:
          description: >-
            String denoting the entity that the patientcase has been
            assigned to.
          type: string
        success:
          description: Boolean to denote success or failure.
          enum:
            - ''
            - false
            - true
          type: string
    RequestClosePatientCase:
      properties:
        actionreasonid:
          description: Valid Document Action Reason ID for closure of Patient Case.
          type: integer
      required:
        - actionreasonid
      type: object
    PutClosePatient200Response:
      type: object
      properties:
        error:
          description: String denoting the failure for cse closure.
          type: string
        success:
          description: Boolean to denote success or failure.
          enum:
            - ''
            - false
            - true
          type: string
    CloseReason:
      type: object
      properties:
        reason:
          description: Human readable string for the reason.
          type: string
        reasonid:
          description: ID of the reason.
          type: integer
    RequestActionNote:
      properties:
        actionnote:
          description: The new action note to add to the document.
          type: string
      required:
        - actionnote
      type: object
    PostActionNote200Response:
      type: object
      properties:
        errormessage:
          description: >-
            If there was an error with this call and SUCCESS is set to
            false, this field may provide additional information.
          type: string
        newdocumentid:
          description: >-
            The document ID of newly created document as a result of
            action of Deny-New Prescription To Follow (DNTF).
          type: string
        success:
          description: Returns true if the update was a success.
          enum:
            - ''
            - false
            - true
          type: string
        versiontoken:
          description: >-
            A token representing the current state of this document.
            Will only be set if VERSIONTOKEN was originally sent to
            the endpoint.
          type: string
    ActionNote:
      type: object
      properties:
        actionnote:
          description: The action notes that are attached to the document.
          type: string
        assignedto:
          description: >-
            This field will describe who was assigned this document
            during this document action.
          type: string
        createdby:
          description: >-
            The username of the person that created this document
            action.
          type: string
        createddatetime:
          description: The datetime this action note was created.
          type: string
        patientid:
          description: The patient ID this document is tied to.
          type: integer
        priority:
          description: Priority given for this document action.
          type: integer
        status:
          description: Status given for this document action.
          type: string
    RequestChartAlert:
      properties:
        departmentid:
          description: >-
            The department ID; needed because charts, and thus chart
            notes, may be department-specific
          type: integer
        notetext:
          description: >-
            The note text.  Use PUT to add to any existing text and POST
            if you want to add new or replace the full note
          type: string
      required:
        - notetext
        - departmentid
      type: object
    PostChartAlert200Response:
      type: object
      properties:
        success:
          description: Returns true/false if the operation was successful
          type: string
    ChartAlert:
      type: object
      properties:
        lastmodified:
          description: >-
            The time this note was updated (mm/dd/yyyy hh24:mi:ss;
            Eastern time), if the note has been updated.
          type: string
        lastmodifiedby:
          description: >-
            If the note has been modified, the username who last
            modified this note.
          type: string
        notetext:
          description: The text of the note.
          type: string
    MedicationChanged:
      type: object
      properties:
        medications:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
        totalcount:
          type: integer
    Medication:
      x-external-id: medicationentryid
      x-external-id-type: string
      type: object
      properties:
        approvedby:
          description: >-
            For clinical prescriptions, the athenaNet username of the
            person who approved this prescription.
          type: string
        billingndc:
          description: The billing NDC code for this medication.
          type: string
        chartsharinggroupid:
          description: >-
            The chart charing group for this medication. For more
            information on chart sharing groups see
            /configuration/chartsharinggroups.
          type: integer
        createdby:
          description: >-
            The athenaNet username of the person who entered or
            ordered the medication. Downloaded medications have
            INTERFACE for this field.
          type: string
        deletedby:
          description: >-
            The athenaNet username of the person who deleted the
            medication.
          type: string
        earliestfilldate:
          description: >-
            The earliest date a prescription may be filled, in the
            format mm/dd/yyyy.
          type: string
        encounterid:
          description: >-
            If this was a prescription, this contains the ID of the
            encounter where it was ordered or administered
          type: integer
        futuresubmitdate:
          description: >-
            The date a medication will be submitted. Included if the
            medication is in PEND status and attached to a approved
            future order.
          type: string
        issafetorenew:
          enum:
            - ''
            - false
            - true
          type: string
        isstructuredsig:
          description: Whether the sig for this entry is structured.
          enum:
            - ''
            - false
            - true
          type: string
        lastupdated:
          description: The last time any of the medications were updated
          type: string
        medication:
          description: The name of the medication.
          type: string
        medicationentryid:
          description: >-
            Primary ID for this medication entry. Those starting with
            C are clinical prescriptions, and those starting with H
            are historical (entered, downloaded, etc).
          type: string
        medicationid:
          description: Athena ID for this medication.
          type: integer
        ndcoptions:
          description: >-
            The list of NDC numbers that correspond to this
            medication.
          type: string
        orderingmode:
          description: >-
            The ordering mode for prescriptions. Can be PRESCRIBE,
            DISPENSE, or ADMINISTER.
          type: string
        organclass:
          description: >-
            The organ class for this medication. This is equivalent to
            a medication class.
          type: string
        patientid:
          description: The patient that this medication was prescribed to.
          type: integer
        patientnote:
          description: >-
            Patient-facing note for this prescription. Labeled "note"
            in the UI.
          type: string
        pharmacy:
          description: The name of the pharmacy where this medication was filled.
          type: string
        pharmacyncpdpid:
          description: >-
            The NCPDP ID of the pharmacy for this medication..  See
            http://www.ncpdp.org/ for details.
          type: string
        prescribedby:
          description: The user who prescribed this medication.
          type: string
        providernote:
          description: >-
            Non-patient facing note for ths prescription. Labeled
            "internal note" in the UI.
          type: string
        refillsallowed:
          description: >-
            The number of refills allowed when this medication was
            ordered.
          type: integer
        route:
          description: The route for the prescription.
          type: string
        rxnorm:
          description: >-
            The list of RxNorm Identifiers that correspond to this
            medication. This list may contain both branded and generic
            identifiers. Note: Not All medications would include RX
            Norm.
          type: string
        source:
          description: >-
            How this medication was entered. This can be the ordering
            provider, a medication history download (express scripts,
            medco, etc), ATHENA (which means it was entered manually),
            etc.
          type: string
        status:
          description: >-
            The status of this medication. Medications in PEND status
            are associated with approved future orders and have not
            yet been submitted.
          type: string
        stopreason:
          description: The reason why this medication was stopped.
          type: string
        therapeuticclass:
          description: >-
            The therapeutic class for this medication. This is
            equivalent to a medication subclass.
          type: string
        unstructuredsig:
          description: >-
            The unstructured sig for this medication, if any. If there
            is a structured sig, this will contain the formatted
            version of that sig.
          type: string
        patient:
          $ref: '#/components/schemas/Patient'
    ProblemChanged:
      type: object
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/Problem'
        totalcount:
          type: integer
    Problem:
      type: object
      x-external-id: problemid
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        bestmatchicd10code:
          description: >-
            If this was added from the chart or from an
            encounter without a selected ICD10 code, and if the
            primary codeset is SNOMED, then this contains the
            best matching ICD10 code mapped. Because SNOMED to
            ICD10 is a many to many map, this will tend to give
            the most generic diagnosis.
          type: string
        code:
          description: Problem code
          type: string
        codeset:
          description: Problem codeset (SNOMED, ICD9, ICD10, etc)
          type: string
        deactivateddate:
          description: Date of problem deactivation.
          type: string
        deactivateduser:
          description: The name of the user who deactivated the problem.
          type: string
        events:
          description: >-
            List of start and stop events for this problem,
            which can occur multiple times.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        lastmodifiedby:
          description: >-
            The username of the user who last modified this
            problem.
          type: string
        lastmodifieddatetime:
          description: >-
            The date the problem was last modified. Currently
            only date precision.
          type: string
        mostrecentdiagnosisnote:
          description: >-
            The data will be displayed when the
            showdiagnosisinfo flag is set to true
          type: string
        name:
          description: Problem name
          type: string
        problemid:
          description: Athena ID for this problem
          type: integer
    Event:
      type: object
      properties:
        problem:
          $ref: '#/components/schemas/Problem'
        createdby:
          description: The name of the user who entered this problem.
          type: string
        createddate:
          description: The date that the user entered this problem.
          type: string
        diagnoses:
          description: >-
            List of encounter diagnoses that triggered
            this problem.
          items:
            $ref: '#/components/schemas/EventDiagnose'
          type: array
        encounterdate:
          description: >-
            The date of the encounter where a diagnosis
            matching this problem was used.
          type: string
        enddate:
          description: >-
            The date this problem event ended or was
            hidden
          type: string
        eventtype:
          description: >-
            The type of this event: START, END, HIDDEN,
            REACTIVATED, or ENCOUNTER
          type: string
        laterality:
          description: >-
            The laterality of this problem. Can be null,
            LEFT, RIGHT, or BILATERAL.
          type: string
        note:
          description: The note attached to this event.
          type: string
        onsetdate:
          description: >-
            The specified onset date for this problem, as
            entered by the practice. If available this is
            more accurate than the start date.
          type: string
        source:
          description: 'The source of this event: ENCOUNTER or HISTORY'
          type: string
        startdate:
          description: >-
            The date this problem event started or was
            restarted. Uses the onsetdate if available,
            otherwise uses the date the problem was
            entered into the system.
          type: string
        status:
          description: >-
            The status of this problem event: CHRONIC or
            ACUTE
          type: string
    EventDiagnose:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/Event'
        code:
          description: Diagnosis code
          type: string
        codeset:
          description: >-
            Diagnosis codeset (SNOMED, ICD9, ICD10,
            etc)
          type: string
        name:
          description: >-
            Diagnosis name. Might be different than
            problem name.
          type: string
    ClinicalDocument200Response:
      type: object
      properties:
        clinicaldocumentid:
          description: The document ID of the new or modified document.
          type: integer
        errormessage:
          description: If the operation failed, this will contain an error message.
          type: string
        success:
          description: Returns true/false if the operation was successful.
          enum:
            - ''
            - false
            - true
          type: string
    PostClinicalDocument:
      type: object
      required:
        - documentsubclass
        - departmentid
      properties:
        attachmentcontents:
          description: The file contents that will be attached to this document. PDFs and PNGs are supported file types. Other file types are available only for alpha partners. All files must be Base64 encoded.
          type: string
        attachmenttype:
          default: PDF
          description: The file type of attachment. PDFs and PNGs are supported. Other file types are available only for alpha partners
          enum:
            - ''
            - BMP
            - GIF
            - JPG
            - JPEG
            - PDF
            - PNG
            - TIF
            - TIFF
          type: string
        autoclose:
          description: Documents will, normally, automatically appear in the clinical inbox for providers to review. In some cases, you might want to force the document to skip the clinical inbox, and go directly to the patient chart with a "closed" status. For that case, set this to true.
          type: boolean
        clinicalproviderid:
          description: The ID of the external provider/lab/pharmacy associated the document.
          type: integer
        departmentid:
          description: The athenaNet department ID associated with the uploaded document.
          type: integer
        documentdata:
          description: Text data stored with document
          type: string
        documentsubclass:
          description: Subclasses for CLINICALDOCUMENT documents
          enum:
            - CLINICALDOCUMENT
            - ADMISSIONDISCHARGE
            - CONSULTNOTE
            - MENTALHEALTH
            - OPERATIVENOTE
            - URGENTCARE
          type: string
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        internalnote:
          description: An internal note for the provider or staff. Updating this will append to any previous notes.
          type: string
        observationdate:
          description: The date an observation was made (mm/dd/yyyy).
          type: string
        observationtime:
          description: The time an observation was made (hh24:mi).  24 hour time.
          type: string
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
    ClinicalDocument:
      type: object
      x-external-id: clinicaldocumentid
      properties:
        patientid:
          description: The athenaNet patient ID.
          type: integer
        actionnote:
          description: The most recent action note for a document
          type: string
        assignedto:
          description: Person the document is assigned to
          type: string
        clinicaldocumentid:
          description: The primary key for the clinical document.
          type: integer
        clinicalproviderid:
          description: The ID of the clinical provider associated with this clinical document. Clinical providers are a master list of providers throughout the country.  These include providers as well as radiology centers, labs and pharmacies.
          type: integer
        createddate:
          description: Date the document was created. Please use createddatetime instead.
          type: string
        createddatetime:
          description: Date/Time (ISO 8601) the document was created
          type: string
        createduser:
          description: The user who created this document.
          type: string
        departmentid:
          description: Department for the document
          type: string
        documentclass:
          description: Class of document
          type: string
        documentdata:
          description: Text data associated with this document.
          type: string
        documentdescription:
          description: Description of the document type
          type: string
        documentroute:
          description: Explains method by which the document was entered into the AthenaNet (INTERFACE (digital), FAX, etc.)
          type: string
        documentsource:
          description: Explains where this document originated.
          enum:
            - ''
            - PATIENT
            - CAREGIVER
            - PARTNER
            - PHARMACY
            - LAB
            - PCP
            - SPECIALIST
            - STAFF
            - HOSPITAL
            - OTHER
            - PORTAL
            - Live Operator
          type: string
        documentsubclass:
          description: Specific type of document
          type: string
        documenttypeid:
          description: The ID of the description for this document
          type: integer
        externalnote:
          description: External note for the patient.
          type: string
        internalnote:
          description: The 'Internal Note' attached to this document
          type: string
        lastmodifieddate:
          type: string
        lastmodifieddatetime:
          description: Date/time (ISO 8601) the document was last modified
          type: string
        lastmodifieduser:
          description: The user who last modified this document.
          type: string
        observationdate:
          description: Date of the encounter associated with this document
          type: string
        ordertype:
          description: Order type group name
          type: string
        pages:
          description: An array of image pages associated with this document.
          items:
            $ref: '#/components/schemas/ClinicalDocumentPageDetail'
          type: array
        priority:
          description: Document priority, when available. 1 is high, 2 is normal. Some labs use other numbers or characters that are lab-specific.
          type: string
        providerid:
          description: Provider ID for this document
          type: integer
        providerusername:
          description: The username of the provider associated with this lab result document.
          type: string
        status:
          description: Status of the document
          type: string
        tietoorderid:
          description: Order ID of the order this document is tied to, if any
          type: integer
    ClinicalDocumentPage:
      type: object
      properties:
        attachment:
          description: The image of the page in jpeg format.
          type: string
    PutClinicalDocument:
      type: object
      properties:
        clinicalproviderid:
          description: The ID of the external provider/lab/pharmacy associated the document.
          type: integer
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        internalnote:
          description: An internal note for the provider or staff. Updating this will append to any previous notes if replaceinternalnote is not set.
          type: string
        observationdate:
          description: The date an observation was made (mm/dd/yyyy).
          type: string
        observationtime:
          description: The time an observation was made (hh24:mi).  24 hour time.
          type: string
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
        replaceinternalnote:
          description: If true, will replace the existing internal note with the new one. If false, will append to the existing note.
          type: boolean
    Allergy:
      type: object
      x-external-id: allergenid
      properties:
        allergenid:
          description: Athena ID for this allergen.
          type: integer
        allergenname:
          description: The name of the allergen.
          type: string
        deactivatedate:
          description: >-
            Date of allergy deactivation. Set to deactivate the
            allergy.
          type: string
        note:
          description: Note about this allergy.
          type: string
        onsetdate:
          description: Date of allergy onset.
          type: string
        patientid:
          description: The Patient ID associated with the allergy.
          type: string
        reactions:
          description: List of documented reactions.
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
    Reaction:
      type: object
      properties:
        reactionname:
          description: Name of the reaction.
          type: string
        severity:
          description: Severity of the reaction.
          type: string
        severitysnomedcode:
          description: SNOMED code for the severity of this reaction.
          type: integer
        snomedcode:
          description: SNOMED code for this reaction.
          type: integer
    AllergyChanged:
      type: object
      properties:
        allergies:
          type: array
          items:
            $ref: '#/components/schemas/Allergy'
        totalcount:
          type: integer
    VitalsResponse:
      properties:
        errormessage:
          description: >-
            If the operation failed, this will contain any error
            messages.
          type: string
        success:
          description: Whether the operation was successful or not.
          enum:
            - ''
            - false
            - true
          type: string
      type: object
    EncounterVitals:
      properties:
        encounter:
          $ref: '#/components/schemas/Encounter'
        posting:
          type: integer
        vitals:
          type: array
          items:
            $ref: '#/components/schemas/Vitals'
      type: object
    Vitals:
      properties:
        encounterVital:
          $ref: '#/components/schemas/EncounterVitals'
        abbreviation:
          description: >-
            Short human-readable string for this vital group. E.g.,
            Ht.
          type: string
        key:
          description: Key for this vital group. E.g., HEIGHT.
          type: string
        ordering:
          description: Configured order for this vital group
          type: integer
        clinicalelementid:
          description: Key used to identify this particular vital attribute
          type: string
        code:
          description: Code indentifier for the reading.
          type: string
        codedescription:
          description: Description of the code identifier.
          type: string
        codeset:
          description: Codeset of the code.
          type: string
        createdby:
          description: >-
            The athenaNet username of the person who entered the
            vital.
          type: string
        createddate:
          description: >-
            The date this vital was entered into the chart.
            Returned in mm/dd/yyyy hh24:mi:ss format.
          type: string
        isgraphable:
          description: Flag indicating if this vital is graphable.
          enum:
            - ''
            - false
            - true
          type: string
        percentilespec:
          properties:
            high:
              description: The highest value the y value could be.
              type: integer
            highordinal:
              description: Ordinal of the high value.
              type: string
            low:
              description: The lowest value that y could be.
              type: integer
            lowordinal:
              description: Ordinal of the lowest value.
              type: string
            prefix:
              description: >-
                Indicator of less than or greater. Possible
                values: (>,<)
              type: string
          type: object
        readingid:
          description: >-
            Numeric key used to tie related and distinguish
            separate readings. So the diastolic and systolic
            blood pressure should have the same readingid.
          type: integer
        readingtaken:
          description: Date that the reading was taken.
          type: string
        source:
          description: The source of this reading.
          type: string
        sourceid:
          description: External key to source.
          type: integer
        unit:
          description: Unit that describes this vital's value.
          type: string
        value:
          description: >-
            The value of this reading. NOTE: for numeric values,
            the units are always in the 'native' units per the
            configuration.
          type: string
        vitalid:
          description: >-
            Unique ID for this vital attribute reading. Used to
            update/delete this reading.
          type: integer
      type: object
    Readings:
      x-external-id: vitalid
      description: >-
        List of vital attribute readings. One entry per attribute
        (so the temperature and where the temperature was taken
        are two different readings, tied together by the readingid
        items:
      properties:
        clinicalelementid:
          description: Key used to identify this particular vital attribute
          type: string
        code:
          description: Code indentifier for the reading.
          type: string
        codedescription:
          description: Description of the code identifier.
          type: string
        codeset:
          description: Codeset of the code.
          type: string
        createdby:
          description: >-
            The athenaNet username of the person who entered the
            vital.
          type: string
        createddate:
          description: >-
            The date this vital was entered into the chart.
            Returned in mm/dd/yyyy hh24:mi:ss format.
          type: string
        isgraphable:
          description: Flag indicating if this vital is graphable.
          enum:
            - ''
            - false
            - true
          type: string
        percentilespec:
          properties:
            high:
              description: The highest value the y value could be.
              type: integer
            highordinal:
              description: Ordinal of the high value.
              type: string
            low:
              description: The lowest value that y could be.
              type: integer
            lowordinal:
              description: Ordinal of the lowest value.
              type: string
            prefix:
              description: >-
                Indicator of less than or greater. Possible
                values: (>,<)
              type: string
          type: object
        readingid:
          description: >-
            Numeric key used to tie related and distinguish
            separate readings. So the diastolic and systolic
            blood pressure should have the same readingid.
          type: integer
        readingtaken:
          description: Date that the reading was taken.
          type: string
        source:
          description: The source of this reading.
          type: string
        sourceid:
          description: External key to source.
          type: integer
        unit:
          description: Unit that describes this vital's value.
          type: string
        value:
          description: >-
            The value of this reading. NOTE: for numeric values,
            the units are always in the 'native' units per the
            configuration.
          type: string
        vitalid:
          description: >-
            Unique ID for this vital attribute reading. Used to
            update/delete this reading.
          type: integer
        abbreviation:
          description: >-
            Short human-readable string for this vital group. E.g.,
            Ht.
          type: string
        key:
          description: Key for this vital group. E.g., HEIGHT.
          type: string
        ordering:
          description: Configured order for this vital group
          type: integer
      type: object
    VitalsConfiguration:
      properties:
        abbreviation:
          description: >-
            Short human-readable string for this vital group. E.g.,
            Ht.
          type: string
        attributes:
          description: >-
            List of vital attributes in this vital group. Contains all
            possible attributes even if there are no readings.
          items:
            properties:
              abbreviation:
                description: Short human readable name for this attribute
                type: string
              clinicalelementid:
                description: Key used to identify this particular vital attribute
                type: string
              dataset:
                description: For SET attributes, the list of valid values.
                type: string
              datatype:
                description: >-
                  Data type for this attribute. Can be CHECKBOX,
                  FREETEXT, NUMERIC, or SET.
                type: string
              name:
                description: Human readable name for this attribute
                type: string
              unit:
                description: For NUMERIC attributes, the units the value is in.
                type: string
            type: object
          type: array
        istiedtomeasurement:
          description: If true, this vital is tied to some measurement.
          enum:
            - ''
            - false
            - true
          type: string
        key:
          description: Key for this vital group. E.g., HEIGHT.
          type: string
        ordering:
          description: Configured order for this vital group
          type: integer
      type: object
    PutVitalsResponse:
      properties:
        errormessage:
          description: >-
            If the operation failed, this will contain any error
            messages.
          type: string
        success:
          description: Whether the operation was successful or not.
          enum:
            - ''
            - false
            - true
          type: string
      type: object
    Vaccine:
      type: object
      x-external-id: vaccineid
      x-external-id-type: string
      properties:
        administerdate:
          description: >-
            Date when this vaccine was administered (if administered).
            Can be in YYYY, MM/YYYY, or MM/DD/YYYY format.
          type: string
        administernote:
          description: >-
            Note associated with administering the vaccine, if
            available
          type: string
        administerroute:
          description: Route by which this vaccine was administered
          type: string
        administerroutedescription:
          description: >-
            Description of the route by which this vaccine was
            administered
          type: string
        administersite:
          description: Site where the vaccine was administered
          type: string
        amount:
          description: Quantity of the vaccine that was adminsitered
          type: number
        approvedby:
          description: >-
            The username of the user who approved this vaccine order,
            if clinical
          type: string
        approveddate:
          description: Date when this vaccine order was approved, if clinical
          type: string
        chartsharinggroupid:
          description: >-
            ID of the chart sharing group that the vaccine is
            associated with. This can be used to determine what
            department a vaccine belongs with.
          type: integer
        clinicalorderclasses:
          description: >-
            The various Clinical Order Classes associated with this
            Vaccine
          items:
            $ref: '#/components/schemas/ClinicalOrderClass'
          type: array
        contraindicationreason:
          description: >-
            List of codes indicating why the order was contraindicated
            (for vaccines only). If this field is not present, the
            order does not contain a contraindication reason.
          items:
            $ref: '#/components/schemas/ContraindicationReason'
          type: array
        cvx:
          description: Vaccine Administered Code
          type: integer
        declinedreason:
          description: >-
            List of codes indicating why the order was not given. If
            this field is not present, the order was not declined. If
            the array is empty, no reason has been chosen.
          items:
            $ref: '#/components/schemas/DeclinedReason'
          type: array
        declinedreasontext:
          description: >-
            The user-facing description of the reason the order was
            not given.
          type: string
        deleteddate:
          description: Date when this vaccine was deleted (if deleted)
          type: string
        description:
          description: Vaccine description
          type: string
        enteredby:
          description: >-
            The username of the user who entered the historic vaccine
            information into the chart
          type: string
        entereddate:
          description: >-
            Date when the vaccine information was entered into the
            chart
          type: string
        expirationdate:
          description: Date to administer vaccine by
          type: string
        genusname:
          description: >-
            The name of the vaccine that appears in the UI of the
            chart
          type: string
        lotnumber:
          description: >-
            The lot number of the vaccine that was administered. This
            is an identifier assigned to a batch of medications by the
            manufacturer.
          type: string
        mvx:
          description: Manufacturer code
          type: string
        ndc:
          description: The National Drug Code for the administered vaccine.
          type: string
        orderedby:
          description: The username of the user who ordered the vaccine
          type: string
        ordereddate:
          description: Date the vaccine was ordered
          type: string
        partiallyadministered:
          description: Whether this vaccine was partially administered or not.
          enum:
            - ''
            - false
            - true
          type: string
        patientid:
          description: ID of the patient that the vaccine is associated with.
          type: integer
        prescribeddate:
          description: Date when this vaccine was prescribed (if prescribed)
          type: string
        refuseddate:
          description: Date when this vaccine was refused (if refused)
          type: string
        refusednote:
          description: Note associated with refusal, if available
          type: string
        refusedreason:
          description: Reason for refusal, if available
          type: string
        status:
          description: >-
            Status of this vaccine (one of: ADMINISTERED, REFUSED,
            PRESCRIBED but not adminstered yet)
          type: string
        submitdate:
          description: Date when this vaccine order was submitted, if clinical
          type: string
        units:
          description: Units corresponding to the above quantity
          type: string
        vaccinator:
          description: Individual who has administered the vaccine
          type: string
        vaccineid:
          description: >-
            Athena ID for this vaccine (prefix of H for historical, C
            for clinical)
          type: string
        vaccineinformationstatements:
          description: >-
            The Vaccine Information Statements (VIS) that were given
            to the patient, grouped by Clinical Order Class
          items:
            $ref: '#/components/schemas/VaccineInformationStatements'
          type: array
        vaccinetype:
          description: >-
            Type of vaccine (either CLINICAL - ordered/administered by
            the practice, or HISTORICAL - from patient's previous
            medical history or alternative source)
          type: string
        visgivendate:
          description: >-
            Date when the Vaccine Information Statement was given to
            the patient
          type: string
    ClinicalOrderClass:
      type: object
      properties:
        clinicalorderclassid:
          description: The clinical order class id
          type: number
        name:
          description: The name for this clinical order class
          type: string
    ContraindicationReason:
      type: object
      properties:
        code:
          description: >-
            The code indicating why the order was
            contraindicated.
          type: string
        codeset:
          description: The codeset that the code belongs to.
          type: string
        description:
          description: >-
            The plaintext description of the contraindication
            reason.
          type: string
    DeclinedReason:
      type: object
      properties:
        code:
          description: The code indicating why the order was not given.
          type: string
        codeset:
          description: The codeset that the code belongs to.
          type: string
        description:
          description: >-
            The plaintext description of the reason the order
            was not given.
          type: string
    VaccineInformationStatements:
      type: object
      properties:
        clinicalorderclassid:
          description: The clinical order class id
          type: number
        dateonvis:
          description: >-
            The VIS date associated with this vaccine and
            clinical order class id
          type: string
    VaccineChanged:
      type: object
      properties:
        vaccines:
          type: array
          items:
            $ref: '#/components/schemas/Vaccine'
        totalcount:
          type: integer
    FamilyHistory:
      x-external-id: problemid
      type: object
      properties:
        description:
          description: Brief description for this code/problem
          type: string
        diedofage:
          description: Age when the patient died, if this problem was the cause
          type: integer
        note:
          description: Additional note for this problem
          type: string
        onsetage:
          description: Age when this problem first occured
          type: integer
        patientid:
          description: >-
            The athenanet patient ID associated with this family
            problem.
          type: integer
        problemid:
          description: Athena ID for this problem
          type: integer
        relation:
          description: Relationship to the patient
          type: string
        relationkeyid:
          description: >-
            ID of the relationship (for example, having 2 brothers,
            one would have ID of 1, another would have ID of 2)
          type: integer
        resolvedage:
          description: Age when the problem was resolved, if applicable
          type: integer
        snomedcode:
          description: SNOMED code for this diagnosis
          type: integer
    FamilyHistoryChanged:
      type: object
      properties:
        problems:
          type: array
          items:
            $ref: '#/components/schemas/FamilyHistory'
        totalcount:
          type: integer
    RequestCreateMedication:
      properties:
        PATIENTFACINGCALL:
          description: >-
            When 'true' is passed we will collect relevant data and
            store in our database.
          type: boolean
        THIRDPARTYUSERNAME:
          description: User name of the patient in the third party application.
          type: string
        departmentid:
          description: The athenanet department ID
          type: integer
        hidden:
          description: Set whether the medication is hidden in the UI.
          type: boolean
        medicationid:
          description: The athena medication ID
          type: integer
        patientnote:
          description: A patient-facing note
          type: string
        providernote:
          description: An internal note
          type: string
        startdate:
          description: Start date for this medication
          type: string
        stopdate:
          description: Stop date for this medication
          type: string
        stopreason:
          description: >-
            The reason the medication was stopped. If set, it it
            recommended but not required that a stop date is also set.
          type: string
        unstructuredsig:
          description: >-
            Can only be used to update historical (entered, downloaded,
            etc) medications. Will override a structured sig if there is
            one.
          type: string
      required:
        - medicationid
        - departmentid
      type: object
    PostMedication200Response:
      x-external-id: medicationentryid
      type: object
      properties:
        errormessage:
          description: >-
            If the operation failed, this will contain any error
            messages.
          type: string
        medicationentryid:
          description: >-
            If successful, the athena ID of the newly created
            historical medication
          type: string
        success:
          description: Whether the operation was successful or not.
          enum:
            - ''
            - false
            - true
          type: string
    ListMedications:
      type: object
      properties:
        lastdownloaddenialreason:
          description: >-
            BETA FIELD: The reason the last medication history
            download was denied.
          type: string
        lastdownloaddenied:
          description: >-
            BETA FIELD: Whether or not the last medication history
            download was denied.
          enum:
            - ''
            - false
            - true
          type: string
        lastdownloadeddate:
          description: >-
            The time of the last attempted medication history download
            from SureScripts.
          type: string
        lastupdated:
          description: The last time any of the medications were updated
          type: string
        medications:
          description: The list of medications
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/Medication'
        nomedicationsreported:
          description: Whether the patient explicitly has no reported medications
          enum:
            - ''
            - false
            - true
          type: string
        patientdownloadconsent:
          description: >-
            Whether or not the patient has consented to have their
            medication history downloaded. There are plans to
            deprecate this field.
          enum:
            - ''
            - false
            - true
          type: string
        patientneedsdownloadconsent:
          description: >-
            Whether or not the patient needs to consent to have
            medication history downloaded. This will be true if either
            the patient has not currently consented, or the practice
            is not enabled for these downloads.  This field is
            typically used when determining whether to message to the
            patient that they have not consented to these downloads.
            Note that regardless of this setting, medication history
            that has already been downloaded will remain available.
          enum:
            - ''
            - false
            - true
          type: string
        sectionnote:
          description: A section-wide note
          type: string
    MedicationReference:
      type: object
      properties:
        medication:
          description: The name of the medication
          type: string
        medicationid:
          description: The athena ID of the medication
          type: integer
    RequestUpdateMedication:
      properties:
        departmentid:
          description: The athenanet department ID
          type: integer
        hidden:
          description: Set whether the medication is hidden in the UI.
          type: boolean
        patientnote:
          description: A patient-facing note
          type: string
        providernote:
          description: An internal note
          type: string
        startdate:
          description: Start date for this medication
          type: string
        stopdate:
          description: Stop date for this medication
          type: string
        stopreason:
          description: >-
            The reason the medication was stopped. If set, it it
            recommended but not required that a stop date is also set.
          type: string
        unstructuredsig:
          description: >-
            Can only be used to update historical (entered, downloaded,
            etc) medications. Will override a structured sig if there is
            one.
          type: string
      required:
        - departmentid
      type: object
    PutMedication200Response:
      type: object
      properties:
        errormessage:
          description: >-
            If the operation failed, this will contain any error
            messages.
          type: string
        success:
          description: Whether the operation was successful.
          enum:
            - ''
            - false
            - true
          type: string
    RequestAppointmentNote:
      properties:
        displayonschedule:
          description: Add appointment note to homepage display (defaults to false)
          type: boolean
        notetext:
          description: The note text.
          type: string
      required:
        - notetext
      type: object
    PostAppointmentNote200Response:
      type: object
      properties:
        success:
          description: Returns true/false if the operation was successful
          type: string
    AppointmentNote:
      type: object
      x-external-id: noteid
      properties:
        created:
          description: The time this note was created (mm/dd/yyyy hh24:mi:ss)
          type: string
        createdby:
          description: The user that created this note.
          type: string
        deleted:
          description: >-
            The time this note was deleted (mm/dd/yyyy hh24:mi:ss).
            Not present if not deleted.
          type: string
        deletedby:
          description: If deleted, the username who deleted this note.
          type: string
        displayonschedule:
          description: >-
            Determines if an appointment note displays on the homepage
            schedule view.
          type: string
        lastmodified:
          description: >-
            The time this note was updated (mm/dd/yyyy hh24:mi:ss), if
            the note has been updated.
          type: string
        lastmodifiedby:
          description: >-
            If the note has been modified, the username who last
            modified this note.
          type: string
        noteid:
          description: The ID for this note, for use with DELETE and PUT calls.
          type: string
        notetext:
          description: The text of the note itself.
          type: string
        put_appointment200_response:
          $ref: '#/components/schemas/PutAppointment200Response'
    RequestUpdateAppointmentNote:
      properties:
        displayonschedule:
          description: Add appointment note to homepage display.
          type: boolean
        notetext:
          description: The note text.
          type: string
      required:
        - notetext
      type: object
    PutAppointmentNote200Response:
      type: object
      properties:
        success:
          description: Returns true/false if the operation was successful
          enum:
            - ''
            - false
            - true
          type: string
    PostProblem200Response:
      x-external-id: problemid
      type: object
      properties:
        errormessage:
          description: Error message will be returned if show error message flag is set to true and patient match found.
          type: string
        problemid:
          description: Please remember to never disclose this ID to patients since it may result in inadvertant disclosure that a patient exists in a practice already.
          type: string
        success:
          type: string
    GetProblem200Response:
      type: object
      properties:
        lastmodifiedby:
          description: >-
            The username of the user who last modified the note, no
            known problems checkbox, or problems.
          type: string
        lastmodifieddatetime:
          description: >-
            The date and time the note, no known problems checkbox, or
            problems were last updated.
          type: string
        lastupdated:
          description: >-
            Deprecated, used LASTMODIFIEDDATETIME instead. The last
            date any of the problems in the returned list were
            updated. Does not include no known problems or the section
            note, and is date precision.
          type: string
        noknownproblems:
          description: >-
            Whether the no known problems checkbox is checked. This is
            an explicit statement separate from a patient who has no
            documented problems so far.
          enum:
            - ''
            - false
            - true
          type: string
        notelastmodifiedby:
          description: The username of the user who last modified the note.
          type: string
        notelastmodifieddatetime:
          description: The date and time the section note was last updated.
          type: string
        problems:
          description: List of problems, grouped by problem code
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        sectionnote:
          description: The problem section note
          type: string
        totalcount:
          description: Total number of problems
          type: integer
    RequestCreateProblem:
      type: object
      properties:
        PATIENTFACINGCALL:
          description: >-
            When 'true' is passed we will collect relevant data and
            store in our database.
          type: boolean
        THIRDPARTYUSERNAME:
          description: User name of the patient in the third party application.
          type: string
        departmentid:
          description: The athenaNet department id.
          type: integer
        laterality:
          description: >-
            Update the laterality of this problem. Can be null, LEFT,
            RIGHT, or BILATERAL.
          enum:
            - ''
            - LEFT
            - RIGHT
            - BILATERAL
          type: string
        note:
          description: The note to be attached to this problem.
          type: string
        snomedcode:
          description: >-
            The <a
            href="http://www.nlm.nih.gov/research/umls/Snomed/snomed_browsers.html">SNOMED
            code</a> of the problem you are adding.
          type: integer
        startdate:
          description: >-
            The onset date to be updated for this problem in MM/DD/YYYY
            format.
          type: string
        status:
          description: Whether the problem is chronic or acute.
          enum:
            - ''
            - CHRONIC
            - ACUTE
          type: string
      required:
        - departmentid
        - snomedcode
    Finding:
      type: object
      properties:
        findingname:
          description: The name of the finding.
          type: string
        findingnote:
          description: The note for the finding selected.
          type: string
        findingtype:
          description: Describes the finding - either NORMAL, ABNORMAL, or NEUTRAL.
          type: string
        freetext:
          description: Freetext that could be associated with this finding.
          type: string
        selectedoptions:
          description: The option in the finding that was selected by the user.
          items:
            type: string
          type: array
    Sentence:
      type: object
      properties:
        findings:
          type: array
          description: The findings in the sentence
          items:
            $ref: '#/components/schemas/Finding'
        sentencename:
          description: The name of the sentence in the paragraph.
          type: string
        sentencenote:
          description: The note that goes along with this sentence.
          type: string
    Paragraph:
      type: object
      properties:
        paragraphname:
          description: The name of the interpretation paragraph.
          type: string
        sentences:
          type: array
          description: The sentences in the paragraph.
          items:
            $ref: '#/components/schemas/Sentence'
    LabResult:
      type: object
      x-external-id: labresultid
      properties:
        actionnote:
          description: The most recent action note for a document
          type: string
        alarmdays:
          description: The number days, weeks, months, or year until a lab result document will go into followup after being sent to the portal.
          type: string
        appointmentid:
          description: The appointment ID for this document
          type: integer
        assignedto:
          description: Person the document is assigned to
          type: string
        createddate:
          description: Date the document was created. Please use createddatetime instead.
          type: string
        createddatetime:
          description: Date/Time (ISO 8601) the document was created
          type: string
        createduser:
          description: The user who created this document.
          type: string
        deleteddatetime:
          description: Date/time (ISO 8601) the document was deleted
          type: string
        departmentid:
          description: Department for the document
          type: string
        description:
          description: Description of the document type
          type: string
        documentclass:
          description: Class of document
          type: string
        documentroute:
          description: Explains method by which the document was entered into the AthenaNet (INTERFACE (digital), FAX, etc.)
          type: string
        documentsource:
          description: Explains where this document originated.
          enum:
            - ''
            - PATIENT
            - CAREGIVER
            - PARTNER
            - PHARMACY
            - LAB
            - PCP
            - SPECIALIST
            - STAFF
            - HOSPITAL
            - OTHER
            - PORTAL
            - Live Operator
          type: string
        documentsubclass:
          description: Specific type of document
          type: string
        documenttypeid:
          description: The ID of the description for this document
          type: integer
        encounterdate:
          description: Date of the encounter associated with this document
          type: string
        encounterid:
          description: Encounter ID
          type: string
        externalaccessionid:
          description: The external accession ID for this document. Format depends on the system the ID belongs to.
          type: string
        externalnoteonly:
          description: External note for the patient.
          type: string
        facilityid:
          description: The ID of the clinical provider associated with this clinical document. Clinical providers are a master list of providers throughout the country.  These include providers as well as radiology centers, labs and pharmacies.
          type: integer
        internalaccessionid:
          description: The internal accession ID for this document. Format depends on the system the ID belongs to.
          type: string
        internalnote:
          description: The 'Internal Note' attached to this document
          type: string
        interpretation:
          description: The practice entered interpretation of this result.
          type: string
        interpretationtemplate:
          description: The interpretation template added to the imaging result.
          type: object
          properties:
            interpretationtemplatename:
              description: The name of the interpretation template.
              type: string
            interpretationtemplatenote:
              description: The interpretation note.
              type: string
            paragraphs:
              type: array
              description: The paragraphs in the template.
              items:
                $ref: '#/components/schemas/Paragraph'
        isconfidential:
          description: If true, this result document should not be shown to the patient.
          enum:
            - ''
            - false
            - true
          type: string
        labresultid:
          description: The primary key for labresult class of documents
          type: integer
        labresultloinc:
          description: Laboratory code that identifies the overall result.
          type: string
        lastmodifieddate:
          description: Date/time (ISO 8601) the document was last modified
          type: string
        lastmodifieddatetime:
          description: Date/time (ISO 8601) the document was last modified
          type: string
        lastmodifieduser:
          description: The user who last modified this document.
          type: string
        notefromlab:
          description: A note from lab.
          type: string
        observationdate:
          description: Date/time the observation was taken
          type: string
        observationdatetime:
          description: Date/time (ISO 8601) the observation was taken
          type: string
        observations:
          description: Individual observation details
          items:
            $ref: '#/components/schemas/ObservationLabResult'
          required:
            - analytename
          type: array
        ordertype:
          description: Order type group name
          type: string
        pages:
          description: An array of image pages associated with this document.
          items:
            $ref: '#/components/schemas/ClinicalDocumentPageDetail'
          type: array
        patientnote:
          description: A note about this lab result for the patient.  This may or may not have been sent to the patient.
          type: string
        performinglabaddress1:
          description: This is the address1 field of the performing lab. For point-of-care tests this is the department. Otherwise, it is the clinical provider
          type: string
        performinglabaddress2:
          description: This is the address2 field of the performing lab. For point-of-care tests this is the department. Otherwise, it is the clinical provider
          type: string
        performinglabcity:
          description: This is the city of the performing lab. For point-of-care tests this is the department. Otherwise, it is the clinical provider
          type: string
        performinglabname:
          description: This is the name of the performing lab. For point-of-care tests this is the department. Otherwise, it is the clinical provider
          type: string
        performinglabstate:
          description: This is the state of the performing lab. For point-of-care tests this is the department. Otherwise, it is the clinical provider
          type: string
        performinglabzip:
          description: This is the zip code of the performing lab. For point-of-care tests this is the department. Otherwise, it is the clinical provider
          type: string
        portalpublisheddatetime:
          description: The date the document was published to the portal in format (yyyy-mm-ddThh:mm:ss).
          type: string
        priority:
          description: Document priority, when available. 1 is high, 2 is normal. Some labs use other numbers or characters that are lab-specific.
          type: string
        providerid:
          description: Provider ID for this document
          type: integer
        providerusername:
          description: The username of the provider associated with this lab result document.
          type: string
        receivedfacilityordercode:
          description: The code as received from the facility via HL7 in OBR.4.
          properties:
            code:
              description: The code received in OBR.4.1.
              type: string
            description:
              description: The description of the code received in OBR.4.2.
              type: string
          type: object
        reportstatus:
          description: The status of the report.
          enum:
            - ''
            - Final
            - Partial
            - Pending
            - Preliminary
            - Complete
            - Incomplete
          type: string
        resultcategory:
          description: The category of the result.
          type: string
        resultnotes:
          description: Result note on a document.
          type: string
        resultstatus:
          description: The status of the result.
          enum:
            - ''
            - Final
            - Partial
            - Pending
            - Preliminary
            - Corrected
            - Cancelled
          type: string
        status:
          description: Status of the document
          type: string
        subject:
          description: Subject of the document
          type: string
        tietoorderid:
          description: Order ID of the order this document is tied to, if any
          type: integer
    ClinicalDocumentPageDetail:
      type: object
      x-external-id: pageid
      properties:
        clinicalDocument:
          $ref: '#/components/schemas/ClinicalDocument'
        labResult:
          $ref: '#/components/schemas/LabResult'
        contenttype:
          description: The content-type that will be returned by the page image call.
          type: string
        href:
          description: The URL to get the document image.
          type: string
        pageid:
          description: The ID to use in a call to get the page image.
          type: string
        pageordering:
          description: Within this list of pages, the ordering (starting with 1).
          type: string
    ObservationLabResult:
      type: object
      x-external-id: observationidentifier
      x-external-id-type: string
      properties:
        labResult:
          $ref: '#/components/schemas/LabResult'
        abnormalflag:
          description: The level of normality for this result.
          type: string
        analyteid:
          description: The athena ID for this analyte. Used to update the analyte.
          type: integer
        analytename:
          description: The name / identifier text for this analyte.
          type: string
        loinc:
          description: The LOINC code for this analyte
          type: string
        note:
          description: Any additional notes about this analyte.
          type: string
        observationidentifier:
          description: The local lab ID for this analyte.
          type: string
        referencerange:
          description: The normal range for this lab analyte.
          type: string
        resultstatus:
          description: Whether this observation is a prelimary, corrected, final, etc result.
          type: string
        units:
          description: The units the value is in.
          type: string
        value:
          description: The observation value for this analyte.
          type: string
    LabResult200Response:
      type: object
      properties:
        errormessage:
          description: If the operation failed, this will contain an error message.
          type: string
        labresultid:
          description: The document ID of the new or modified document.
          type: integer
        success:
          description: Returns true/false if the operation was successful.
          enum:
            - ''
            - false
            - true
          type: string
    PostLabResult:
      required:
        - departmentid
      type: object
      properties:
        accessionid:
          description: A unique identifier given to a document to track it over time.
          type: string
        analytes:
          description: This is an array of hashes in JSON. Each entry contains information for a single analyte. See <a href="https://developer.athenahealth.com/docs/read/workflows/documents/Lab_Analytes">https://developer.athenahealth.com/docs/read/workflows/documents/Lab_Analytes</a> for an example.
          items:
            properties:
              abnormalflag:
                description: The level of normality for this result.
                enum:
                  - ''
                  - NORMAL
                  - ABNORMAL
                  - LOW
                  - HIGH
                  - CRITICAL ABNORMAL
                  - CRITICAL LOW
                  - CRITICAL HIGH
                  - SIGNIFICANT CHANGE UP
                  - SIGNIFICANT CHANGE DOWN
                  - BETTER
                  - WORSE
                  - OFF-SCALE LOW
                  - OFF-SCALE HIGH
                  - SUSCEPTIBLE
                  - RESISTANT
                  - INTERMEDIATE
                  - MODERATELY SUSCEPTIBLE
                  - VERY SUSCEPTIBLE
                  - POSITIVE
                  - NEGATIVE
                  - DELTA
                  - DELTA LOW
                  - DELTA HIGH
                type: string
              analytename:
                description: The name / identifier text for this analyte.
                type: string
              loinc:
                description: The LOINC code for this analyte
                type: string
              note:
                description: Any additional notes about this analyte.
                type: string
              referencerange:
                description: The normal range for this lab analyte.
                type: string
              resultstatus:
                description: Whether this observation is a prelimary, corrected, final, etc result.
                enum:
                  - ''
                  - Final
                  - Corrected
                  - Pending
                  - Preliminary
                  - Unverified
                  - Deleted
                  - Unsolicited
                type: string
              units:
                description: The units the value is in.
                type: string
              value:
                description: The observation value for this analyte.
                type: string
            type: object
          required:
            - analytename
          type: array
        attachmentcontents:
          description: The file contents that will be attached to this document. PDFs and PNGs are supported file types. Other file types are available only for alpha partners. All files must be Base64 encoded.
          type: string
        attachmenttype:
          default: PDF
          description: The file type of attachment. PDFs and PNGs are supported. Other file types are available only for alpha partners
          enum:
            - ''
            - BMP
            - GIF
            - JPG
            - JPEG
            - PDF
            - PNG
            - TIF
            - TIFF
          type: string
        autoclose:
          description: Documents will, normally, automatically appear in the clinical inbox for providers to review. In some cases, you might want to force the document to skip the clinical inbox, and go directly to the patient chart with a "closed" status. For that case, set this to true.
          type: boolean
        departmentid:
          description: The athenaNet department ID associated with the uploaded document.
          type: integer
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        facilityid:
          description: The ID of the facility or clinical provider who received the order.
          type: integer
        internalnote:
          description: An internal note for the provider or staff. Updating this will append to any previous notes.
          type: string
        interpretation:
          description: The practice entered interpretation of this result. Updating this will append to any previous values.
          type: string
        notetopatient:
          description: This is a note specifically for the patient to view or action on. Updating this will append to any previous notes.
          type: string
        observationdate:
          description: The date an observation was made (mm/dd/yyyy).
          type: string
        observationtime:
          description: The time an observation was made (hh24:mi).  24 hour time.
          type: string
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
        reportstatus:
          description: The status of the report.
          enum:
            - ''
            - Final
            - Partial
            - Pending
            - Preliminary
            - Complete
            - Incomplete
          type: string
        resultnotes:
          description: Result notes of a document.
          type: string
        resultstatus:
          description: The status of the result.
          enum:
            - ''
            - Final
            - Partial
            - Pending
            - Preliminary
            - Corrected
            - Cancelled
          type: string
        specimenreceiveddatetime:
          description: Date-time indicating when the specimen was received in format (yyyy-mm-ddThh:mm:ss).
          type: string
        specimenreporteddatetime:
          description: Date-time indicating when the specimen was reported in format (yyyy-mm-ddThh:mm:ss).
          type: string
        tietoorderid:
          description: Tie the result document to this order.
          type: integer
    PutLabResult:
      type: object
      properties:
        accessionid:
          description: A unique identifier given to a document to track it over time.
          type: string
        analytes:
          description: This is an array of hashes in JSON. Each entry contains information for a single analyte. See <a href="https://developer.athenahealth.com/docs/read/workflows/documents/Lab_Analytes">https://developer.athenahealth.com/docs/read/workflows/documents/Lab_Analytes</a> for an example.
          items:
            properties:
              abnormalflag:
                description: The level of normality for this result.
                enum:
                  - ''
                  - NORMAL
                  - ABNORMAL
                  - LOW
                  - HIGH
                  - CRITICAL ABNORMAL
                  - CRITICAL LOW
                  - CRITICAL HIGH
                  - SIGNIFICANT CHANGE UP
                  - SIGNIFICANT CHANGE DOWN
                  - BETTER
                  - WORSE
                  - OFF-SCALE LOW
                  - OFF-SCALE HIGH
                  - SUSCEPTIBLE
                  - RESISTANT
                  - INTERMEDIATE
                  - MODERATELY SUSCEPTIBLE
                  - VERY SUSCEPTIBLE
                  - POSITIVE
                  - NEGATIVE
                  - DELTA
                  - DELTA LOW
                  - DELTA HIGH
                type: string
              analyteid:
                description: The athena ID for this analyte. Used to update the analyte.
                type: integer
              analytename:
                description: The name / identifier text for this analyte.
                type: string
              loinc:
                description: The LOINC code for this analyte
                type: string
              note:
                description: Any additional notes about this analyte.
                type: string
              referencerange:
                description: The normal range for this lab analyte.
                type: string
              resultstatus:
                description: Whether this observation is a prelimary, corrected, final, etc result.
                enum:
                  - ''
                  - Final
                  - Corrected
                  - Pending
                  - Preliminary
                  - Unverified
                  - Deleted
                  - Unsolicited
                type: string
              units:
                description: The units the value is in.
                type: string
              value:
                description: The observation value for this analyte.
                type: string
            type: object
          required:
            - analytename
          type: array
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        facilityid:
          description: The ID of the facility or clinical provider who received the order.
          type: integer
        internalnote:
          description: An internal note for the provider or staff. Updating this will append to any previous notes if replaceinternalnote is not set.
          type: string
        interpretation:
          description: The practice entered interpretation of this result. Updating this will append to any previous values.
          type: string
        notetopatient:
          description: This is a note specifically for the patient to view or action on. Updating this will append to any previous notes.
          type: string
        observationdate:
          description: The date an observation was made (mm/dd/yyyy).
          type: string
        observationtime:
          description: The time an observation was made (hh24:mi).  24 hour time.
          type: string
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
        replaceinternalnote:
          description: If true, will replace the existing internal note with the new one. If false, will append to the existing note.
          type: boolean
        replacepatientnote:
          description: If true, will replace the existing patient note with the new one. If false, will append to the existing note.
          type: boolean
        reportstatus:
          description: The status of the report.
          enum:
            - ''
            - Final
            - Partial
            - Pending
            - Preliminary
            - Complete
            - Incomplete
          type: string
        resultnotes:
          description: Result notes of a document.
          type: string
        resultstatus:
          description: The status of the result.
          enum:
            - ''
            - Final
            - Partial
            - Pending
            - Preliminary
            - Corrected
            - Cancelled
          type: string
        specimenreceiveddatetime:
          description: Date-time indicating when the specimen was received in format (yyyy-mm-ddThh:mm:ss).
          type: string
        specimenreporteddatetime:
          description: Date-time indicating when the specimen was reported in format (yyyy-mm-ddThh:mm:ss).
          type: string
        tietoorderid:
          description: Tie the result document to this order.
          type: integer
    LabResultSuccessProcess:
      type: object
      properties:
        errormessage:
          description: If there was an error with this call and SUCCESS is set to false, this field may provide additional information.
          type: string
        success:
          description: Returns true if the update was a success.
          enum:
            - ''
            - false
            - true
          type: string
    PutLabResultDataEntryComplete:
      type: object
      properties:
        actionnote:
          description: The note to be added to the document
          type: string
    PutLabResultClose:
      type: object
      properties:
        actionnote:
          description: The note to be added to the document
          type: string
        actionreasonid:
          description: An alternate action reason to be applied the document
          type: integer
    LabResultSuscription:
      type: object
      properties:
        eventname:
          description: Name of event
          type: string
    LabResultSuscriptionEvent:
      type: object
      properties:
        status:
          description: 'Will return one of following statuses: ACTIVE, INACTIVE, or PARTIAL. The PARTIAL status means that not all events are subscribed to. In the event of a problem, UNKNOWN may be returned.'
          type: string
        subscriptions:
          description: List of events you are subscribed to.
          items:
            $ref: '#/components/schemas/LabResultSuscription'
          type: array
    LabResultSuscriptionSuccess:
      type: object
      properties:
        success:
          description: Returns if the call to manipulate subscriptions for labresults was successful.
          enum:
            - ''
            - false
            - true
          type: string
    PostLabResultSuscrioption:
      type: object
      properties:
        departmentids:
          description: 'For every New/Update Subscriptions complete list of departmentids should be passed. NOTE: Without DepartmentIDs entire Context/Practice will be subscribed.'
          items:
            type: integer
          type: array
        eventname:
          description: By default, you are subscribed to all possible events.  If you only wish to subscribe to an individual event, pass the event name with this argument.
          type: string
    LabResultChanged:
      type: object
      properties:
        labresults:
          description: 'list of lab results.'
          items:
            $ref: '#/components/schemas/LabResult'
          type: array
        totalcount:
          description: By default, you are subscribed to all possible events.  If you only wish to subscribe to an individual event, pass the event name with this argument.
          type: integer
    AdminDocument:
      type: object
      x-external-id: adminid
      properties:
        actionnote:
          description: The most recent action note for a document
          type: string
        adminid:
          description: The primary key for administrative class of documents
          type: integer
        appointmentid:
          description: The appointment ID for this document
          type: integer
        assignedto:
          description: Person the document is assigned to
          type: string
        clinicalproviderid:
          description: The ID of the clinical provider associated with this clinical document. Clinical providers are a master list of providers throughout the country.  These include providers as well as radiology centers, labs and pharmacies.
          type: integer
        createddate:
          description: Date the document was created. Please use createddatetime instead.
          type: string
        createddatetime:
          description: Date/Time (ISO 8601) the document was created
          type: string
        createduser:
          description: The user who created this document.
          type: string
        deleteddatetime:
          description: Date/time (ISO 8601) the document was deleted
          type: string
        departmentid:
          description: Department for the document
          type: string
        description:
          description: Description of the document type
          type: string
        documentclass:
          description: Class of document
          type: string
        documentdata:
          description: Text data associated with this document.
          type: string
        documentdate:
          description: Date/time the observation was taken
          type: string
        documentroute:
          description: Explains method by which the document was entered into the AthenaNet (INTERFACE (digital), FAX, etc.)
          type: string
        documentsource:
          description: Explains where this document originated.
          enum:
            - ''
            - PATIENT
            - CAREGIVER
            - PARTNER
            - PHARMACY
            - LAB
            - PCP
            - SPECIALIST
            - STAFF
            - HOSPITAL
            - OTHER
            - PORTAL
            - Live Operator
          type: string
        documentsubclass:
          description: Specific type of document
          type: string
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        encounterid:
          description: Encounter ID
          type: string
        entitytype:
          description: Type of entity creating the document. Possible values are PROVIDER, PATIENT and OTHERS.
          type: string
        externalaccessionid:
          description: The external accession ID for this document. Format depends on the system the ID belongs to.
          type: string
        externalnote:
          description: External note for the patient.
          type: string
        internalaccessionid:
          description: The internal accession ID for this document. Format depends on the system the ID belongs to.
          type: string
        internalnote:
          description: The 'Internal Note' attached to this document
          type: string
        lastmodifieddate:
          description: Date/time (ISO 8601) the document was last modified
          type: string
        lastmodifieddatetime:
          description: Date/time (ISO 8601) the document was last modified
          type: string
        lastmodifieduser:
          description: The user who last modified this document.
          type: string
        originaldocument:
          description: URL and content-type to download the original document
          properties:
            contenttype:
              description: The content-type of the original document.
              type: string
            href:
              description: The URL to get the original document.
              type: string
          type: object
        pages:
          description: An array of image pages associated with this document.
          items:
            $ref: '#/components/schemas/AdminDocumentPageDetail'
          type: array
        priority:
          description: Document priority, when available. 1 is high, 2 is normal. Some labs use other numbers or characters that are lab-specific.
          type: string
        providerid:
          description: Provider ID for this document
          type: integer
        providerusername:
          description: The username of the provider associated with this lab result document.
          type: string
        patientid:
          description: A patient identifier.
          type: integer
        status:
          description: Status of the document
          type: string
        subject:
          description: Subject of the document
          type: string
        tietoorderid:
          description: Order ID of the order this document is tied to, if any
          type: integer
    AdminDocumentPageDetail:
      type: object
      x-external-id: pageid
      properties:
        adminDocument:
          $ref: '#/components/schemas/AdminDocument'
        contenttype:
          description: The content-type that will be returned by the page image call.
          type: string
        href:
          description: The URL to get the document image.
          type: string
        pageid:
          description: The ID to use in a call to get the page image.
          type: string
        pageordering:
          description: Within this list of pages, the ordering (starting with 1).
          type: string
    AdminDocument200Response:
      type: object
      properties:
        adminid:
          description: The document ID of the new or modified document.
          type: integer
        errormessage:
          description: If the operation failed, this will contain an error message.
          type: string
        success:
          description: Returns true/false if the operation was successful.
          enum:
            - ''
            - false
            - true
          type: string
    PostAdminDocument:
      required:
        - documentsubclass
        - departmentid
      type: object
      properties:
        attachmentcontents:
          description: The file contents that will be attached to this document. PDFs are recommended.
          type: string
        attachmenttype:
          default: PDF
          description: The file type of the attachment.
          enum:
            - ''
            - BMP
            - GIF
            - JPG
            - JPEG
            - PDF
            - PNG
            - TIF
            - TIFF
          type: string
        autoclose:
          description: Documents will, normally, automatically appear in the clinical inbox for providers to review. In some cases, you might want to force the document to skip the clinical inbox, and go directly to the patient chart with a "closed" status. For that case, set this to true.
          type: boolean
        departmentid:
          description: The athenaNet department ID associated with the uploaded document.
          type: integer
        documentdata:
          description: Text data stored with document
          type: string
        documentdate:
          description: The date an observation was made (mm/dd/yyyy).
          type: string
        documentsubclass:
          description: Subclasses for ADMIN documents
          enum:
            - ADMIN
            - BILLING
            - CONSENT
            - HIPAA
            - INSURANCEAPPROVAL
            - INSURANCECARD
            - INSURANCEDENIAL
            - LEGAL
            - MEDICALRECORDREQ
            - MUDUNNINGLETTER
            - REFERRAL
            - SIGNEDFORMSLETTERS
            - VACCINATIONRECORD
          type: string
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        entityid:
          description: Identifier of entity creating the document. entitytype is required while passing entityid.
          type: string
        entitytype:
          description: Type of entity creating the document. entityid is required while passing entitytype.
          enum:
            - ''
            - PROVIDER
            - PATIENT
            - OTHERS
          type: string
        internalnote:
          description: An internal note for the provider or staff. Updating this will append to any previous notes.
          type: string
        originalfilename:
          description: The original file name of this document without the file extension. Filename should not exceed 200 characters.
          type: string
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
    PutAdminDocument:
      type: object
      properties:
        adminid:
          description: The document ID of the edited document.
          type: integer
        documentdate:
          description: The date an observation was made (mm/dd/yyyy).
          type: string
        documenttypeid:
          description: A specific document type identifier.
          type: integer
        internalnote:
          description: An internal note for the provider or staff. Updating this will append to any previous notes.
          type: string
        priority:
          description: Priority of this result.  1 is high; 2 is normal.
          enum:
            - ''
            - 1
            - 2
          type: string
        providerid:
          description: The ID of the ordering provider.
          type: integer
    AdminDocumentPage:
      type: object
      properties:
        attachment:
          description: The image of the page in jpeg format.
          type: string
    AdminDocumentOriginalDocument:
      type: object
      properties:
        attachment:
          description: The original document in uploaded format.
          type: string